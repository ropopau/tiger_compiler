State 2 conflicts: 1 shift/reduce


Grammar

    0 $accept: program "end of file"

    1 program: exp
    2        | chunks

    3 exps: ε
    4     | exps.1

    5 exps.1: exps.1 ";" exps.2
    6       | exps.2

    7 exps.2: exp

    8 rec: ε
    9    | rec.1

   10 rec.1: rec.1 "," rec.2
   11      | rec.2

   12 rec.2: "identifier" "=" exp

   13 exp: "integer"
   14    | "nil"
   15    | "string"
   16    | "identifier" "[" exp "]" "of" exp
   17    | "identifier" "{" rec "}"
   18    | lvalue
   19    | "identifier" "(" funcall ")"
   20    | "-" exp
   21    | exp "=" exp
   22    | exp "+" exp
   23    | exp "-" exp
   24    | exp "*" exp
   25    | exp "/" exp
   26    | exp ">=" exp
   27    | exp "<=" exp
   28    | exp "<>" exp
   29    | exp ">" exp
   30    | exp "<" exp
   31    | exp "&" exp
   32    | exp "|" exp
   33    | "(" exps ")"
   34    | lvalue ":=" exp
   35    | "if" exp "then" exp "else" exp
   36    | "if" exp "then" exp
   37    | "while" exp "do" exp
   38    | "for" "identifier" ":=" exp "to" exp "do" exp
   39    | "break"
   40    | "let" chunks "in" exps "end"
   41    | "new" typeid
   42    | lvalue "." "identifier" "(" funcall ")"
   43    | "_cast" "(" exp "," ty ")"
   44    | "_exp" "(" "integer" ")"

   45 lvalue: "identifier"
   46       | lvalue "." "identifier"
   47       | lvalue "[" exp "]"
   48       | "_lvalue" "(" "integer" ")"

   49 funcall: ε
   50        | funcall.1

   51 funcall.1: funcall.1 "," funcall.2
   52          | funcall.2

   53 funcall.2: exp

   54 chunks: ε
   55       | tychunk chunks
   56       | funchunk chunks
   57       | varchunk chunks
   58       | "import" "string"
   59       | "_chunks" "(" "integer" ")" chunks

   60 funchunk: fundec
   61         | fundec funchunk

   62 fundec: "function" "identifier" "(" tyvarchunks ")" "=" exp
   63       | "function" "identifier" "(" tyvarchunks ")" ":" typeid "=" exp
   64       | "primitive" "identifier" "(" tyvarchunks ")"
   65       | "primitive" "identifier" "(" tyvarchunks ")" ":" typeid

   66 varchunk: vardec

   67 vardec: "var" "identifier" ":=" exp
   68       | "var" "identifier" ":" typeid ":=" exp

   69 tychunk: tydec
   70        | tydec tychunk

   71 tydec: "type" "identifier" "=" ty
   72      | "class" "identifier" "extends" typeid "{" classfields "}"
   73      | "class" "identifier" "{" classfields "}"

   74 ty: typeid
   75   | "{" tyfields "}"
   76   | "array" "of" typeid
   77   | "class" "extends" typeid "{" classfields "}"
   78   | "class" "{" classfields "}"

   79 tyfields: ε
   80         | tyfields.1

   81 tyfields.1: tyfields.1 "," tyfield
   82           | tyfield

   83 tyfield: "identifier" ":" typeid

   84 tyvarchunks: ε
   85            | tyvarchunks.1

   86 tyvarchunks.1: tyvarchunks.1 "," tyvardec
   87              | tyvardec

   88 tyvardec: "identifier" ":" typeid

   89 classfields: ε
   90            | varchunk classfields
   91            | methchunk classfields

   92 methchunk: methdec
   93          | methdec methchunk

   94 methdec: "method" "identifier" "(" tyvarchunks ")" "=" exp
   95        | "method" "identifier" "(" tyvarchunks ")" ":" typeid "=" exp

   96 typeid: "identifier"
   97       | "_namety" "(" "integer" ")"


Terminals, with rules where they appear

    "end of file" (0) 0
    error (256)
    "string" <std::string> (258) 15 58
    "identifier" <misc::symbol> (259) 12 16 17 19 38 42 45 46 62 63 64 65 67 68 71 72 73 83 88 94 95 96
    "integer" <int> (260) 13 44 48 59 97
    "&" (261) 31
    "array" (262) 76
    ":=" (263) 34 38 67 68
    "break" (264) 39
    "_cast" (265) 43
    "class" (266) 72 73 77 78
    ":" (267) 63 65 68 83 88 95
    "," (268) 10 43 51 81 86
    "/" (269) 25
    "do" (270) 37 38
    "." (271) 42 46
    "else" (272) 35
    "end" (273) 40
    "=" (274) 12 21 62 63 71 94 95
    "extends" (275) 72 77
    "for" (276) 38
    "function" (277) 62 63
    ">=" (278) 26
    ">" (279) 29
    "if" (280) 35 36
    "import" (281) 58
    "in" (282) 40
    "{" (283) 17 72 73 75 77 78
    "[" (284) 16 47
    "<=" (285) 27
    "let" (286) 40
    "(" (287) 19 33 42 43 44 48 59 62 63 64 65 94 95 97
    "<" (288) 30
    "-" (289) 20 23
    "method" (290) 94 95
    "<>" (291) 28
    "new" (292) 41
    "nil" (293) 14
    "of" (294) 16 76
    "|" (295) 32
    "+" (296) 22
    "primitive" (297) 64 65
    "}" (298) 17 72 73 75 77 78
    "]" (299) 16 47
    ")" (300) 19 33 42 43 44 48 59 62 63 64 65 94 95 97
    ";" (301) 5
    "then" (302) 35 36
    "*" (303) 24
    "to" (304) 38
    "type" (305) 71
    "var" (306) 67 68
    "while" (307) 37
    "_exp" (308) 44
    "_lvalue" (309) 48
    "_chunks" (310) 59
    "_namety" (311) 97


Nonterminals, with rules where they appear

    $accept (57)
        on left: 0
    program (58)
        on left: 1 2
        on right: 0
    exps <ast::exps_type*> (59)
        on left: 3 4
        on right: 33 40
    exps.1 <ast::exps_type*> (60)
        on left: 5 6
        on right: 4 5
    exps.2 <ast::Exp*> (61)
        on left: 7
        on right: 5 6
    rec <ast::fieldinits_type*> (62)
        on left: 8 9
        on right: 17
    rec.1 <ast::fieldinits_type*> (63)
        on left: 10 11
        on right: 9 10
    rec.2 <ast::FieldInit*> (64)
        on left: 12
        on right: 10 11
    exp <ast::Exp*> (65)
        on left: 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44
        on right: 1 7 12 16 20 21 22 23 24 25 26 27 28 29 30 31 32 34 35 36 37 38 43 47 53 62 63 67 68 94 95
    lvalue <ast::Var*> (66)
        on left: 45 46 47 48
        on right: 18 34 42 46 47
    funcall <ast::exps_type*> (67)
        on left: 49 50
        on right: 19 42
    funcall.1 <ast::exps_type*> (68)
        on left: 51 52
        on right: 50 51
    funcall.2 <ast::Exp*> (69)
        on left: 53
        on right: 51 52
    chunks <ast::ChunkList*> (70)
        on left: 54 55 56 57 58 59
        on right: 2 40 55 56 57 59
    funchunk <ast::FunctionChunk*> (71)
        on left: 60 61
        on right: 56 61
    fundec <ast::FunctionDec*> (72)
        on left: 62 63 64 65
        on right: 60 61
    varchunk <ast::VarChunk*> (73)
        on left: 66
        on right: 57 90
    vardec <ast::VarDec*> (74)
        on left: 67 68
        on right: 66
    tychunk <ast::TypeChunk*> (75)
        on left: 69 70
        on right: 55 70
    tydec <ast::TypeDec*> (76)
        on left: 71 72 73
        on right: 69 70
    ty <ast::Ty*> (77)
        on left: 74 75 76 77 78
        on right: 43 71
    tyfields <ast::fields_type*> (78)
        on left: 79 80
        on right: 75
    tyfields.1 <ast::fields_type*> (79)
        on left: 81 82
        on right: 80 81
    tyfield <ast::Field*> (80)
        on left: 83
        on right: 81 82
    tyvarchunks <ast::VarChunk*> (81)
        on left: 84 85
        on right: 62 63 64 65 94 95
    tyvarchunks.1 <ast::VarChunk*> (82)
        on left: 86 87
        on right: 85 86
    tyvardec <ast::VarDec*> (83)
        on left: 88
        on right: 86 87
    classfields <ast::ChunkList*> (84)
        on left: 89 90 91
        on right: 72 73 77 78 90 91
    methchunk <ast::MethodChunk*> (85)
        on left: 92 93
        on right: 91 93
    methdec <ast::MethodDec*> (86)
        on left: 94 95
        on right: 92 93
    typeid <ast::NameTy*> (87)
        on left: 96 97
        on right: 41 63 65 68 72 74 76 77 83 88 95


State 0

    0 $accept: • program "end of file"
    1 program: • exp
    2        | • chunks
   13 exp: • "integer"
   14    | • "nil"
   15    | • "string"
   16    | • "identifier" "[" exp "]" "of" exp
   17    | • "identifier" "{" rec "}"
   18    | • lvalue
   19    | • "identifier" "(" funcall ")"
   20    | • "-" exp
   21    | • exp "=" exp
   22    | • exp "+" exp
   23    | • exp "-" exp
   24    | • exp "*" exp
   25    | • exp "/" exp
   26    | • exp ">=" exp
   27    | • exp "<=" exp
   28    | • exp "<>" exp
   29    | • exp ">" exp
   30    | • exp "<" exp
   31    | • exp "&" exp
   32    | • exp "|" exp
   33    | • "(" exps ")"
   34    | • lvalue ":=" exp
   35    | • "if" exp "then" exp "else" exp
   36    | • "if" exp "then" exp
   37    | • "while" exp "do" exp
   38    | • "for" "identifier" ":=" exp "to" exp "do" exp
   39    | • "break"
   40    | • "let" chunks "in" exps "end"
   41    | • "new" typeid
   42    | • lvalue "." "identifier" "(" funcall ")"
   43    | • "_cast" "(" exp "," ty ")"
   44    | • "_exp" "(" "integer" ")"
   45 lvalue: • "identifier"
   46       | • lvalue "." "identifier"
   47       | • lvalue "[" exp "]"
   48       | • "_lvalue" "(" "integer" ")"
   54 chunks: ε •  ["end of file"]
   55       | • tychunk chunks
   56       | • funchunk chunks
   57       | • varchunk chunks
   58       | • "import" "string"
   59       | • "_chunks" "(" "integer" ")" chunks
   60 funchunk: • fundec
   61         | • fundec funchunk
   62 fundec: • "function" "identifier" "(" tyvarchunks ")" "=" exp
   63       | • "function" "identifier" "(" tyvarchunks ")" ":" typeid "=" exp
   64       | • "primitive" "identifier" "(" tyvarchunks ")"
   65       | • "primitive" "identifier" "(" tyvarchunks ")" ":" typeid
   66 varchunk: • vardec
   67 vardec: • "var" "identifier" ":=" exp
   68       | • "var" "identifier" ":" typeid ":=" exp
   69 tychunk: • tydec
   70        | • tydec tychunk
   71 tydec: • "type" "identifier" "=" ty
   72      | • "class" "identifier" "extends" typeid "{" classfields "}"
   73      | • "class" "identifier" "{" classfields "}"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "_cast"       shift, and go to state 5
    "class"       shift, and go to state 6
    "for"         shift, and go to state 7
    "function"    shift, and go to state 8
    "if"          shift, and go to state 9
    "import"      shift, and go to state 10
    "let"         shift, and go to state 11
    "("           shift, and go to state 12
    "-"           shift, and go to state 13
    "new"         shift, and go to state 14
    "nil"         shift, and go to state 15
    "primitive"   shift, and go to state 16
    "type"        shift, and go to state 17
    "var"         shift, and go to state 18
    "while"       shift, and go to state 19
    "_exp"        shift, and go to state 20
    "_lvalue"     shift, and go to state 21
    "_chunks"     shift, and go to state 22

    $default  reduce using rule 54 (chunks)

    program   go to state 23
    exp       go to state 24
    lvalue    go to state 25
    chunks    go to state 26
    funchunk  go to state 27
    fundec    go to state 28
    varchunk  go to state 29
    vardec    go to state 30
    tychunk   go to state 31
    tydec     go to state 32


State 1

   15 exp: "string" •

    $default  reduce using rule 15 (exp)


State 2

   16 exp: "identifier" • "[" exp "]" "of" exp
   17    | "identifier" • "{" rec "}"
   19    | "identifier" • "(" funcall ")"
   45 lvalue: "identifier" •  ["end of file", "&", ":=", "class", ",", "/", "do", ".", "else", "end", "=", "function", ">=", ">", "import", "in", "[", "<=", "<", "-", "method", "<>", "|", "+", "primitive", "}", "]", ")", ";", "then", "*", "to", "type", "var", "_chunks"]

    "{"  shift, and go to state 33
    "["  shift, and go to state 34
    "("  shift, and go to state 35

    "["       [reduce using rule 45 (lvalue)]
    $default  reduce using rule 45 (lvalue)

    shift/reduce conflict on token "[":
       45 lvalue: "identifier" •
       16 exp: "identifier" • "[" exp "]" "of" exp
      First example: "identifier" • "[" exp "]" "of" exp "end of file"
      Shift derivation
        $accept
        ↳ 0: program                                        "end of file"
             ↳ 1: exp
                  ↳ 16: "identifier" • "[" exp "]" "of" exp
      Second example: "identifier" • "[" exp "]" "end of file"
      Reduce derivation
        $accept
        ↳ 0: program                                           "end of file"
             ↳ 1: exp
                  ↳ 18: lvalue
                        ↳ 47: lvalue               "[" exp "]"
                              ↳ 45: "identifier" •



State 3

   13 exp: "integer" •

    $default  reduce using rule 13 (exp)


State 4

   39 exp: "break" •

    $default  reduce using rule 39 (exp)


State 5

   43 exp: "_cast" • "(" exp "," ty ")"

    "("  shift, and go to state 36


State 6

   72 tydec: "class" • "identifier" "extends" typeid "{" classfields "}"
   73      | "class" • "identifier" "{" classfields "}"

    "identifier"  shift, and go to state 37


State 7

   38 exp: "for" • "identifier" ":=" exp "to" exp "do" exp

    "identifier"  shift, and go to state 38


State 8

   62 fundec: "function" • "identifier" "(" tyvarchunks ")" "=" exp
   63       | "function" • "identifier" "(" tyvarchunks ")" ":" typeid "=" exp

    "identifier"  shift, and go to state 39


State 9

   13 exp: • "integer"
   14    | • "nil"
   15    | • "string"
   16    | • "identifier" "[" exp "]" "of" exp
   17    | • "identifier" "{" rec "}"
   18    | • lvalue
   19    | • "identifier" "(" funcall ")"
   20    | • "-" exp
   21    | • exp "=" exp
   22    | • exp "+" exp
   23    | • exp "-" exp
   24    | • exp "*" exp
   25    | • exp "/" exp
   26    | • exp ">=" exp
   27    | • exp "<=" exp
   28    | • exp "<>" exp
   29    | • exp ">" exp
   30    | • exp "<" exp
   31    | • exp "&" exp
   32    | • exp "|" exp
   33    | • "(" exps ")"
   34    | • lvalue ":=" exp
   35    | • "if" exp "then" exp "else" exp
   35    | "if" • exp "then" exp "else" exp
   36    | • "if" exp "then" exp
   36    | "if" • exp "then" exp
   37    | • "while" exp "do" exp
   38    | • "for" "identifier" ":=" exp "to" exp "do" exp
   39    | • "break"
   40    | • "let" chunks "in" exps "end"
   41    | • "new" typeid
   42    | • lvalue "." "identifier" "(" funcall ")"
   43    | • "_cast" "(" exp "," ty ")"
   44    | • "_exp" "(" "integer" ")"
   45 lvalue: • "identifier"
   46       | • lvalue "." "identifier"
   47       | • lvalue "[" exp "]"
   48       | • "_lvalue" "(" "integer" ")"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "_cast"       shift, and go to state 5
    "for"         shift, and go to state 7
    "if"          shift, and go to state 9
    "let"         shift, and go to state 11
    "("           shift, and go to state 12
    "-"           shift, and go to state 13
    "new"         shift, and go to state 14
    "nil"         shift, and go to state 15
    "while"       shift, and go to state 19
    "_exp"        shift, and go to state 20
    "_lvalue"     shift, and go to state 21

    exp     go to state 40
    lvalue  go to state 25


State 10

   58 chunks: "import" • "string"

    "string"  shift, and go to state 41


State 11

   40 exp: "let" • chunks "in" exps "end"
   54 chunks: ε •  ["in"]
   55       | • tychunk chunks
   56       | • funchunk chunks
   57       | • varchunk chunks
   58       | • "import" "string"
   59       | • "_chunks" "(" "integer" ")" chunks
   60 funchunk: • fundec
   61         | • fundec funchunk
   62 fundec: • "function" "identifier" "(" tyvarchunks ")" "=" exp
   63       | • "function" "identifier" "(" tyvarchunks ")" ":" typeid "=" exp
   64       | • "primitive" "identifier" "(" tyvarchunks ")"
   65       | • "primitive" "identifier" "(" tyvarchunks ")" ":" typeid
   66 varchunk: • vardec
   67 vardec: • "var" "identifier" ":=" exp
   68       | • "var" "identifier" ":" typeid ":=" exp
   69 tychunk: • tydec
   70        | • tydec tychunk
   71 tydec: • "type" "identifier" "=" ty
   72      | • "class" "identifier" "extends" typeid "{" classfields "}"
   73      | • "class" "identifier" "{" classfields "}"

    "class"      shift, and go to state 6
    "function"   shift, and go to state 8
    "import"     shift, and go to state 10
    "primitive"  shift, and go to state 16
    "type"       shift, and go to state 17
    "var"        shift, and go to state 18
    "_chunks"    shift, and go to state 22

    $default  reduce using rule 54 (chunks)

    chunks    go to state 42
    funchunk  go to state 27
    fundec    go to state 28
    varchunk  go to state 29
    vardec    go to state 30
    tychunk   go to state 31
    tydec     go to state 32


State 12

    3 exps: ε •  [")"]
    4     | • exps.1
    5 exps.1: • exps.1 ";" exps.2
    6       | • exps.2
    7 exps.2: • exp
   13 exp: • "integer"
   14    | • "nil"
   15    | • "string"
   16    | • "identifier" "[" exp "]" "of" exp
   17    | • "identifier" "{" rec "}"
   18    | • lvalue
   19    | • "identifier" "(" funcall ")"
   20    | • "-" exp
   21    | • exp "=" exp
   22    | • exp "+" exp
   23    | • exp "-" exp
   24    | • exp "*" exp
   25    | • exp "/" exp
   26    | • exp ">=" exp
   27    | • exp "<=" exp
   28    | • exp "<>" exp
   29    | • exp ">" exp
   30    | • exp "<" exp
   31    | • exp "&" exp
   32    | • exp "|" exp
   33    | • "(" exps ")"
   33    | "(" • exps ")"
   34    | • lvalue ":=" exp
   35    | • "if" exp "then" exp "else" exp
   36    | • "if" exp "then" exp
   37    | • "while" exp "do" exp
   38    | • "for" "identifier" ":=" exp "to" exp "do" exp
   39    | • "break"
   40    | • "let" chunks "in" exps "end"
   41    | • "new" typeid
   42    | • lvalue "." "identifier" "(" funcall ")"
   43    | • "_cast" "(" exp "," ty ")"
   44    | • "_exp" "(" "integer" ")"
   45 lvalue: • "identifier"
   46       | • lvalue "." "identifier"
   47       | • lvalue "[" exp "]"
   48       | • "_lvalue" "(" "integer" ")"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "_cast"       shift, and go to state 5
    "for"         shift, and go to state 7
    "if"          shift, and go to state 9
    "let"         shift, and go to state 11
    "("           shift, and go to state 12
    "-"           shift, and go to state 13
    "new"         shift, and go to state 14
    "nil"         shift, and go to state 15
    "while"       shift, and go to state 19
    "_exp"        shift, and go to state 20
    "_lvalue"     shift, and go to state 21

    $default  reduce using rule 3 (exps)

    exps    go to state 43
    exps.1  go to state 44
    exps.2  go to state 45
    exp     go to state 46
    lvalue  go to state 25


State 13

   13 exp: • "integer"
   14    | • "nil"
   15    | • "string"
   16    | • "identifier" "[" exp "]" "of" exp
   17    | • "identifier" "{" rec "}"
   18    | • lvalue
   19    | • "identifier" "(" funcall ")"
   20    | • "-" exp
   20    | "-" • exp
   21    | • exp "=" exp
   22    | • exp "+" exp
   23    | • exp "-" exp
   24    | • exp "*" exp
   25    | • exp "/" exp
   26    | • exp ">=" exp
   27    | • exp "<=" exp
   28    | • exp "<>" exp
   29    | • exp ">" exp
   30    | • exp "<" exp
   31    | • exp "&" exp
   32    | • exp "|" exp
   33    | • "(" exps ")"
   34    | • lvalue ":=" exp
   35    | • "if" exp "then" exp "else" exp
   36    | • "if" exp "then" exp
   37    | • "while" exp "do" exp
   38    | • "for" "identifier" ":=" exp "to" exp "do" exp
   39    | • "break"
   40    | • "let" chunks "in" exps "end"
   41    | • "new" typeid
   42    | • lvalue "." "identifier" "(" funcall ")"
   43    | • "_cast" "(" exp "," ty ")"
   44    | • "_exp" "(" "integer" ")"
   45 lvalue: • "identifier"
   46       | • lvalue "." "identifier"
   47       | • lvalue "[" exp "]"
   48       | • "_lvalue" "(" "integer" ")"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "_cast"       shift, and go to state 5
    "for"         shift, and go to state 7
    "if"          shift, and go to state 9
    "let"         shift, and go to state 11
    "("           shift, and go to state 12
    "-"           shift, and go to state 13
    "new"         shift, and go to state 14
    "nil"         shift, and go to state 15
    "while"       shift, and go to state 19
    "_exp"        shift, and go to state 20
    "_lvalue"     shift, and go to state 21

    exp     go to state 47
    lvalue  go to state 25


State 14

   41 exp: "new" • typeid
   96 typeid: • "identifier"
   97       | • "_namety" "(" "integer" ")"

    "identifier"  shift, and go to state 48
    "_namety"     shift, and go to state 49

    typeid  go to state 50


State 15

   14 exp: "nil" •

    $default  reduce using rule 14 (exp)


State 16

   64 fundec: "primitive" • "identifier" "(" tyvarchunks ")"
   65       | "primitive" • "identifier" "(" tyvarchunks ")" ":" typeid

    "identifier"  shift, and go to state 51


State 17

   71 tydec: "type" • "identifier" "=" ty

    "identifier"  shift, and go to state 52


State 18

   67 vardec: "var" • "identifier" ":=" exp
   68       | "var" • "identifier" ":" typeid ":=" exp

    "identifier"  shift, and go to state 53


State 19

   13 exp: • "integer"
   14    | • "nil"
   15    | • "string"
   16    | • "identifier" "[" exp "]" "of" exp
   17    | • "identifier" "{" rec "}"
   18    | • lvalue
   19    | • "identifier" "(" funcall ")"
   20    | • "-" exp
   21    | • exp "=" exp
   22    | • exp "+" exp
   23    | • exp "-" exp
   24    | • exp "*" exp
   25    | • exp "/" exp
   26    | • exp ">=" exp
   27    | • exp "<=" exp
   28    | • exp "<>" exp
   29    | • exp ">" exp
   30    | • exp "<" exp
   31    | • exp "&" exp
   32    | • exp "|" exp
   33    | • "(" exps ")"
   34    | • lvalue ":=" exp
   35    | • "if" exp "then" exp "else" exp
   36    | • "if" exp "then" exp
   37    | • "while" exp "do" exp
   37    | "while" • exp "do" exp
   38    | • "for" "identifier" ":=" exp "to" exp "do" exp
   39    | • "break"
   40    | • "let" chunks "in" exps "end"
   41    | • "new" typeid
   42    | • lvalue "." "identifier" "(" funcall ")"
   43    | • "_cast" "(" exp "," ty ")"
   44    | • "_exp" "(" "integer" ")"
   45 lvalue: • "identifier"
   46       | • lvalue "." "identifier"
   47       | • lvalue "[" exp "]"
   48       | • "_lvalue" "(" "integer" ")"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "_cast"       shift, and go to state 5
    "for"         shift, and go to state 7
    "if"          shift, and go to state 9
    "let"         shift, and go to state 11
    "("           shift, and go to state 12
    "-"           shift, and go to state 13
    "new"         shift, and go to state 14
    "nil"         shift, and go to state 15
    "while"       shift, and go to state 19
    "_exp"        shift, and go to state 20
    "_lvalue"     shift, and go to state 21

    exp     go to state 54
    lvalue  go to state 25


State 20

   44 exp: "_exp" • "(" "integer" ")"

    "("  shift, and go to state 55


State 21

   48 lvalue: "_lvalue" • "(" "integer" ")"

    "("  shift, and go to state 56


State 22

   59 chunks: "_chunks" • "(" "integer" ")" chunks

    "("  shift, and go to state 57


State 23

    0 $accept: program • "end of file"

    "end of file"  shift, and go to state 58


State 24

    1 program: exp •  ["end of file"]
   21 exp: exp • "=" exp
   22    | exp • "+" exp
   23    | exp • "-" exp
   24    | exp • "*" exp
   25    | exp • "/" exp
   26    | exp • ">=" exp
   27    | exp • "<=" exp
   28    | exp • "<>" exp
   29    | exp • ">" exp
   30    | exp • "<" exp
   31    | exp • "&" exp
   32    | exp • "|" exp

    "&"   shift, and go to state 59
    "/"   shift, and go to state 60
    "="   shift, and go to state 61
    ">="  shift, and go to state 62
    ">"   shift, and go to state 63
    "<="  shift, and go to state 64
    "<"   shift, and go to state 65
    "-"   shift, and go to state 66
    "<>"  shift, and go to state 67
    "|"   shift, and go to state 68
    "+"   shift, and go to state 69
    "*"   shift, and go to state 70

    $default  reduce using rule 1 (program)


State 25

   18 exp: lvalue •  ["end of file", "&", "class", ",", "/", "do", "else", "end", "=", "function", ">=", ">", "import", "in", "<=", "<", "-", "method", "<>", "|", "+", "primitive", "}", "]", ")", ";", "then", "*", "to", "type", "var", "_chunks"]
   34    | lvalue • ":=" exp
   42    | lvalue • "." "identifier" "(" funcall ")"
   46 lvalue: lvalue • "." "identifier"
   47       | lvalue • "[" exp "]"

    ":="  shift, and go to state 71
    "."   shift, and go to state 72
    "["   shift, and go to state 73

    $default  reduce using rule 18 (exp)


State 26

    2 program: chunks •

    $default  reduce using rule 2 (program)


State 27

   54 chunks: ε •  ["end of file", "in"]
   55       | • tychunk chunks
   56       | • funchunk chunks
   56       | funchunk • chunks
   57       | • varchunk chunks
   58       | • "import" "string"
   59       | • "_chunks" "(" "integer" ")" chunks
   60 funchunk: • fundec
   61         | • fundec funchunk
   62 fundec: • "function" "identifier" "(" tyvarchunks ")" "=" exp
   63       | • "function" "identifier" "(" tyvarchunks ")" ":" typeid "=" exp
   64       | • "primitive" "identifier" "(" tyvarchunks ")"
   65       | • "primitive" "identifier" "(" tyvarchunks ")" ":" typeid
   66 varchunk: • vardec
   67 vardec: • "var" "identifier" ":=" exp
   68       | • "var" "identifier" ":" typeid ":=" exp
   69 tychunk: • tydec
   70        | • tydec tychunk
   71 tydec: • "type" "identifier" "=" ty
   72      | • "class" "identifier" "extends" typeid "{" classfields "}"
   73      | • "class" "identifier" "{" classfields "}"

    "class"      shift, and go to state 6
    "function"   shift, and go to state 8
    "import"     shift, and go to state 10
    "primitive"  shift, and go to state 16
    "type"       shift, and go to state 17
    "var"        shift, and go to state 18
    "_chunks"    shift, and go to state 22

    $default  reduce using rule 54 (chunks)

    chunks    go to state 74
    funchunk  go to state 27
    fundec    go to state 28
    varchunk  go to state 29
    vardec    go to state 30
    tychunk   go to state 31
    tydec     go to state 32


State 28

   60 funchunk: • fundec
   60         | fundec •  ["end of file", "class", "import", "in", "type", "var", "_chunks"]
   61         | • fundec funchunk
   61         | fundec • funchunk
   62 fundec: • "function" "identifier" "(" tyvarchunks ")" "=" exp
   63       | • "function" "identifier" "(" tyvarchunks ")" ":" typeid "=" exp
   64       | • "primitive" "identifier" "(" tyvarchunks ")"
   65       | • "primitive" "identifier" "(" tyvarchunks ")" ":" typeid

    "function"   shift, and go to state 8
    "primitive"  shift, and go to state 16

    $default  reduce using rule 60 (funchunk)

    funchunk  go to state 75
    fundec    go to state 28

    Conflict between rule 60 and token "function" resolved as shift ("_chunks" < "function").
    Conflict between rule 60 and token "primitive" resolved as shift ("_chunks" < "primitive").


State 29

   54 chunks: ε •  ["end of file", "in"]
   55       | • tychunk chunks
   56       | • funchunk chunks
   57       | • varchunk chunks
   57       | varchunk • chunks
   58       | • "import" "string"
   59       | • "_chunks" "(" "integer" ")" chunks
   60 funchunk: • fundec
   61         | • fundec funchunk
   62 fundec: • "function" "identifier" "(" tyvarchunks ")" "=" exp
   63       | • "function" "identifier" "(" tyvarchunks ")" ":" typeid "=" exp
   64       | • "primitive" "identifier" "(" tyvarchunks ")"
   65       | • "primitive" "identifier" "(" tyvarchunks ")" ":" typeid
   66 varchunk: • vardec
   67 vardec: • "var" "identifier" ":=" exp
   68       | • "var" "identifier" ":" typeid ":=" exp
   69 tychunk: • tydec
   70        | • tydec tychunk
   71 tydec: • "type" "identifier" "=" ty
   72      | • "class" "identifier" "extends" typeid "{" classfields "}"
   73      | • "class" "identifier" "{" classfields "}"

    "class"      shift, and go to state 6
    "function"   shift, and go to state 8
    "import"     shift, and go to state 10
    "primitive"  shift, and go to state 16
    "type"       shift, and go to state 17
    "var"        shift, and go to state 18
    "_chunks"    shift, and go to state 22

    $default  reduce using rule 54 (chunks)

    chunks    go to state 76
    funchunk  go to state 27
    fundec    go to state 28
    varchunk  go to state 29
    vardec    go to state 30
    tychunk   go to state 31
    tydec     go to state 32


State 30

   66 varchunk: vardec •

    $default  reduce using rule 66 (varchunk)


State 31

   54 chunks: ε •  ["end of file", "in"]
   55       | • tychunk chunks
   55       | tychunk • chunks
   56       | • funchunk chunks
   57       | • varchunk chunks
   58       | • "import" "string"
   59       | • "_chunks" "(" "integer" ")" chunks
   60 funchunk: • fundec
   61         | • fundec funchunk
   62 fundec: • "function" "identifier" "(" tyvarchunks ")" "=" exp
   63       | • "function" "identifier" "(" tyvarchunks ")" ":" typeid "=" exp
   64       | • "primitive" "identifier" "(" tyvarchunks ")"
   65       | • "primitive" "identifier" "(" tyvarchunks ")" ":" typeid
   66 varchunk: • vardec
   67 vardec: • "var" "identifier" ":=" exp
   68       | • "var" "identifier" ":" typeid ":=" exp
   69 tychunk: • tydec
   70        | • tydec tychunk
   71 tydec: • "type" "identifier" "=" ty
   72      | • "class" "identifier" "extends" typeid "{" classfields "}"
   73      | • "class" "identifier" "{" classfields "}"

    "class"      shift, and go to state 6
    "function"   shift, and go to state 8
    "import"     shift, and go to state 10
    "primitive"  shift, and go to state 16
    "type"       shift, and go to state 17
    "var"        shift, and go to state 18
    "_chunks"    shift, and go to state 22

    $default  reduce using rule 54 (chunks)

    chunks    go to state 77
    funchunk  go to state 27
    fundec    go to state 28
    varchunk  go to state 29
    vardec    go to state 30
    tychunk   go to state 31
    tydec     go to state 32


State 32

   69 tychunk: • tydec
   69        | tydec •  ["end of file", "function", "import", "in", "primitive", "var", "_chunks"]
   70        | • tydec tychunk
   70        | tydec • tychunk
   71 tydec: • "type" "identifier" "=" ty
   72      | • "class" "identifier" "extends" typeid "{" classfields "}"
   73      | • "class" "identifier" "{" classfields "}"

    "class"  shift, and go to state 6
    "type"   shift, and go to state 17

    $default  reduce using rule 69 (tychunk)

    tychunk  go to state 78
    tydec    go to state 32

    Conflict between rule 69 and token "class" resolved as shift ("_chunks" < "class").
    Conflict between rule 69 and token "type" resolved as shift ("_chunks" < "type").


State 33

    8 rec: ε •  ["}"]
    9    | • rec.1
   10 rec.1: • rec.1 "," rec.2
   11      | • rec.2
   12 rec.2: • "identifier" "=" exp
   17 exp: "identifier" "{" • rec "}"

    "identifier"  shift, and go to state 79

    $default  reduce using rule 8 (rec)

    rec    go to state 80
    rec.1  go to state 81
    rec.2  go to state 82


State 34

   13 exp: • "integer"
   14    | • "nil"
   15    | • "string"
   16    | • "identifier" "[" exp "]" "of" exp
   16    | "identifier" "[" • exp "]" "of" exp
   17    | • "identifier" "{" rec "}"
   18    | • lvalue
   19    | • "identifier" "(" funcall ")"
   20    | • "-" exp
   21    | • exp "=" exp
   22    | • exp "+" exp
   23    | • exp "-" exp
   24    | • exp "*" exp
   25    | • exp "/" exp
   26    | • exp ">=" exp
   27    | • exp "<=" exp
   28    | • exp "<>" exp
   29    | • exp ">" exp
   30    | • exp "<" exp
   31    | • exp "&" exp
   32    | • exp "|" exp
   33    | • "(" exps ")"
   34    | • lvalue ":=" exp
   35    | • "if" exp "then" exp "else" exp
   36    | • "if" exp "then" exp
   37    | • "while" exp "do" exp
   38    | • "for" "identifier" ":=" exp "to" exp "do" exp
   39    | • "break"
   40    | • "let" chunks "in" exps "end"
   41    | • "new" typeid
   42    | • lvalue "." "identifier" "(" funcall ")"
   43    | • "_cast" "(" exp "," ty ")"
   44    | • "_exp" "(" "integer" ")"
   45 lvalue: • "identifier"
   46       | • lvalue "." "identifier"
   47       | • lvalue "[" exp "]"
   48       | • "_lvalue" "(" "integer" ")"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "_cast"       shift, and go to state 5
    "for"         shift, and go to state 7
    "if"          shift, and go to state 9
    "let"         shift, and go to state 11
    "("           shift, and go to state 12
    "-"           shift, and go to state 13
    "new"         shift, and go to state 14
    "nil"         shift, and go to state 15
    "while"       shift, and go to state 19
    "_exp"        shift, and go to state 20
    "_lvalue"     shift, and go to state 21

    exp     go to state 83
    lvalue  go to state 25


State 35

   13 exp: • "integer"
   14    | • "nil"
   15    | • "string"
   16    | • "identifier" "[" exp "]" "of" exp
   17    | • "identifier" "{" rec "}"
   18    | • lvalue
   19    | • "identifier" "(" funcall ")"
   19    | "identifier" "(" • funcall ")"
   20    | • "-" exp
   21    | • exp "=" exp
   22    | • exp "+" exp
   23    | • exp "-" exp
   24    | • exp "*" exp
   25    | • exp "/" exp
   26    | • exp ">=" exp
   27    | • exp "<=" exp
   28    | • exp "<>" exp
   29    | • exp ">" exp
   30    | • exp "<" exp
   31    | • exp "&" exp
   32    | • exp "|" exp
   33    | • "(" exps ")"
   34    | • lvalue ":=" exp
   35    | • "if" exp "then" exp "else" exp
   36    | • "if" exp "then" exp
   37    | • "while" exp "do" exp
   38    | • "for" "identifier" ":=" exp "to" exp "do" exp
   39    | • "break"
   40    | • "let" chunks "in" exps "end"
   41    | • "new" typeid
   42    | • lvalue "." "identifier" "(" funcall ")"
   43    | • "_cast" "(" exp "," ty ")"
   44    | • "_exp" "(" "integer" ")"
   45 lvalue: • "identifier"
   46       | • lvalue "." "identifier"
   47       | • lvalue "[" exp "]"
   48       | • "_lvalue" "(" "integer" ")"
   49 funcall: ε •  [")"]
   50        | • funcall.1
   51 funcall.1: • funcall.1 "," funcall.2
   52          | • funcall.2
   53 funcall.2: • exp

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "_cast"       shift, and go to state 5
    "for"         shift, and go to state 7
    "if"          shift, and go to state 9
    "let"         shift, and go to state 11
    "("           shift, and go to state 12
    "-"           shift, and go to state 13
    "new"         shift, and go to state 14
    "nil"         shift, and go to state 15
    "while"       shift, and go to state 19
    "_exp"        shift, and go to state 20
    "_lvalue"     shift, and go to state 21

    $default  reduce using rule 49 (funcall)

    exp        go to state 84
    lvalue     go to state 25
    funcall    go to state 85
    funcall.1  go to state 86
    funcall.2  go to state 87


State 36

   13 exp: • "integer"
   14    | • "nil"
   15    | • "string"
   16    | • "identifier" "[" exp "]" "of" exp
   17    | • "identifier" "{" rec "}"
   18    | • lvalue
   19    | • "identifier" "(" funcall ")"
   20    | • "-" exp
   21    | • exp "=" exp
   22    | • exp "+" exp
   23    | • exp "-" exp
   24    | • exp "*" exp
   25    | • exp "/" exp
   26    | • exp ">=" exp
   27    | • exp "<=" exp
   28    | • exp "<>" exp
   29    | • exp ">" exp
   30    | • exp "<" exp
   31    | • exp "&" exp
   32    | • exp "|" exp
   33    | • "(" exps ")"
   34    | • lvalue ":=" exp
   35    | • "if" exp "then" exp "else" exp
   36    | • "if" exp "then" exp
   37    | • "while" exp "do" exp
   38    | • "for" "identifier" ":=" exp "to" exp "do" exp
   39    | • "break"
   40    | • "let" chunks "in" exps "end"
   41    | • "new" typeid
   42    | • lvalue "." "identifier" "(" funcall ")"
   43    | • "_cast" "(" exp "," ty ")"
   43    | "_cast" "(" • exp "," ty ")"
   44    | • "_exp" "(" "integer" ")"
   45 lvalue: • "identifier"
   46       | • lvalue "." "identifier"
   47       | • lvalue "[" exp "]"
   48       | • "_lvalue" "(" "integer" ")"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "_cast"       shift, and go to state 5
    "for"         shift, and go to state 7
    "if"          shift, and go to state 9
    "let"         shift, and go to state 11
    "("           shift, and go to state 12
    "-"           shift, and go to state 13
    "new"         shift, and go to state 14
    "nil"         shift, and go to state 15
    "while"       shift, and go to state 19
    "_exp"        shift, and go to state 20
    "_lvalue"     shift, and go to state 21

    exp     go to state 88
    lvalue  go to state 25


State 37

   72 tydec: "class" "identifier" • "extends" typeid "{" classfields "}"
   73      | "class" "identifier" • "{" classfields "}"

    "extends"  shift, and go to state 89
    "{"        shift, and go to state 90


State 38

   38 exp: "for" "identifier" • ":=" exp "to" exp "do" exp

    ":="  shift, and go to state 91


State 39

   62 fundec: "function" "identifier" • "(" tyvarchunks ")" "=" exp
   63       | "function" "identifier" • "(" tyvarchunks ")" ":" typeid "=" exp

    "("  shift, and go to state 92


State 40

   21 exp: exp • "=" exp
   22    | exp • "+" exp
   23    | exp • "-" exp
   24    | exp • "*" exp
   25    | exp • "/" exp
   26    | exp • ">=" exp
   27    | exp • "<=" exp
   28    | exp • "<>" exp
   29    | exp • ">" exp
   30    | exp • "<" exp
   31    | exp • "&" exp
   32    | exp • "|" exp
   35    | "if" exp • "then" exp "else" exp
   36    | "if" exp • "then" exp

    "&"     shift, and go to state 59
    "/"     shift, and go to state 60
    "="     shift, and go to state 61
    ">="    shift, and go to state 62
    ">"     shift, and go to state 63
    "<="    shift, and go to state 64
    "<"     shift, and go to state 65
    "-"     shift, and go to state 66
    "<>"    shift, and go to state 67
    "|"     shift, and go to state 68
    "+"     shift, and go to state 69
    "then"  shift, and go to state 93
    "*"     shift, and go to state 70


State 41

   58 chunks: "import" "string" •

    $default  reduce using rule 58 (chunks)


State 42

   40 exp: "let" chunks • "in" exps "end"

    "in"  shift, and go to state 94


State 43

   33 exp: "(" exps • ")"

    ")"  shift, and go to state 95


State 44

    4 exps: exps.1 •  ["end", ")"]
    5 exps.1: exps.1 • ";" exps.2

    ";"  shift, and go to state 96

    $default  reduce using rule 4 (exps)


State 45

    6 exps.1: exps.2 •

    $default  reduce using rule 6 (exps.1)


State 46

    7 exps.2: exp •  ["end", ")", ";"]
   21 exp: exp • "=" exp
   22    | exp • "+" exp
   23    | exp • "-" exp
   24    | exp • "*" exp
   25    | exp • "/" exp
   26    | exp • ">=" exp
   27    | exp • "<=" exp
   28    | exp • "<>" exp
   29    | exp • ">" exp
   30    | exp • "<" exp
   31    | exp • "&" exp
   32    | exp • "|" exp

    "&"   shift, and go to state 59
    "/"   shift, and go to state 60
    "="   shift, and go to state 61
    ">="  shift, and go to state 62
    ">"   shift, and go to state 63
    "<="  shift, and go to state 64
    "<"   shift, and go to state 65
    "-"   shift, and go to state 66
    "<>"  shift, and go to state 67
    "|"   shift, and go to state 68
    "+"   shift, and go to state 69
    "*"   shift, and go to state 70

    $default  reduce using rule 7 (exps.2)


State 47

   20 exp: "-" exp •  ["end of file", "&", "class", ",", "do", "else", "end", "=", "function", ">=", ">", "import", "in", "<=", "<", "-", "method", "<>", "|", "+", "primitive", "}", "]", ")", ";", "then", "to", "type", "var", "_chunks"]
   21    | exp • "=" exp
   22    | exp • "+" exp
   23    | exp • "-" exp
   24    | exp • "*" exp
   25    | exp • "/" exp
   26    | exp • ">=" exp
   27    | exp • "<=" exp
   28    | exp • "<>" exp
   29    | exp • ">" exp
   30    | exp • "<" exp
   31    | exp • "&" exp
   32    | exp • "|" exp

    "/"  shift, and go to state 60
    "*"  shift, and go to state 70

    $default  reduce using rule 20 (exp)

    Conflict between rule 20 and token "&" resolved as reduce ("&" < "-").
    Conflict between rule 20 and token "/" resolved as shift ("-" < "/").
    Conflict between rule 20 and token "=" resolved as reduce ("=" < "-").
    Conflict between rule 20 and token ">=" resolved as reduce (">=" < "-").
    Conflict between rule 20 and token ">" resolved as reduce (">" < "-").
    Conflict between rule 20 and token "<=" resolved as reduce ("<=" < "-").
    Conflict between rule 20 and token "<" resolved as reduce ("<" < "-").
    Conflict between rule 20 and token "-" resolved as reduce (%left "-").
    Conflict between rule 20 and token "<>" resolved as reduce ("<>" < "-").
    Conflict between rule 20 and token "|" resolved as reduce ("|" < "-").
    Conflict between rule 20 and token "+" resolved as reduce (%left "+").
    Conflict between rule 20 and token "*" resolved as shift ("-" < "*").


State 48

   96 typeid: "identifier" •

    $default  reduce using rule 96 (typeid)


State 49

   97 typeid: "_namety" • "(" "integer" ")"

    "("  shift, and go to state 97


State 50

   41 exp: "new" typeid •

    $default  reduce using rule 41 (exp)


State 51

   64 fundec: "primitive" "identifier" • "(" tyvarchunks ")"
   65       | "primitive" "identifier" • "(" tyvarchunks ")" ":" typeid

    "("  shift, and go to state 98


State 52

   71 tydec: "type" "identifier" • "=" ty

    "="  shift, and go to state 99


State 53

   67 vardec: "var" "identifier" • ":=" exp
   68       | "var" "identifier" • ":" typeid ":=" exp

    ":="  shift, and go to state 100
    ":"   shift, and go to state 101


State 54

   21 exp: exp • "=" exp
   22    | exp • "+" exp
   23    | exp • "-" exp
   24    | exp • "*" exp
   25    | exp • "/" exp
   26    | exp • ">=" exp
   27    | exp • "<=" exp
   28    | exp • "<>" exp
   29    | exp • ">" exp
   30    | exp • "<" exp
   31    | exp • "&" exp
   32    | exp • "|" exp
   37    | "while" exp • "do" exp

    "&"   shift, and go to state 59
    "/"   shift, and go to state 60
    "do"  shift, and go to state 102
    "="   shift, and go to state 61
    ">="  shift, and go to state 62
    ">"   shift, and go to state 63
    "<="  shift, and go to state 64
    "<"   shift, and go to state 65
    "-"   shift, and go to state 66
    "<>"  shift, and go to state 67
    "|"   shift, and go to state 68
    "+"   shift, and go to state 69
    "*"   shift, and go to state 70


State 55

   44 exp: "_exp" "(" • "integer" ")"

    "integer"  shift, and go to state 103


State 56

   48 lvalue: "_lvalue" "(" • "integer" ")"

    "integer"  shift, and go to state 104


State 57

   59 chunks: "_chunks" "(" • "integer" ")" chunks

    "integer"  shift, and go to state 105


State 58

    0 $accept: program "end of file" •

    $default  accept


State 59

   13 exp: • "integer"
   14    | • "nil"
   15    | • "string"
   16    | • "identifier" "[" exp "]" "of" exp
   17    | • "identifier" "{" rec "}"
   18    | • lvalue
   19    | • "identifier" "(" funcall ")"
   20    | • "-" exp
   21    | • exp "=" exp
   22    | • exp "+" exp
   23    | • exp "-" exp
   24    | • exp "*" exp
   25    | • exp "/" exp
   26    | • exp ">=" exp
   27    | • exp "<=" exp
   28    | • exp "<>" exp
   29    | • exp ">" exp
   30    | • exp "<" exp
   31    | • exp "&" exp
   31    | exp "&" • exp
   32    | • exp "|" exp
   33    | • "(" exps ")"
   34    | • lvalue ":=" exp
   35    | • "if" exp "then" exp "else" exp
   36    | • "if" exp "then" exp
   37    | • "while" exp "do" exp
   38    | • "for" "identifier" ":=" exp "to" exp "do" exp
   39    | • "break"
   40    | • "let" chunks "in" exps "end"
   41    | • "new" typeid
   42    | • lvalue "." "identifier" "(" funcall ")"
   43    | • "_cast" "(" exp "," ty ")"
   44    | • "_exp" "(" "integer" ")"
   45 lvalue: • "identifier"
   46       | • lvalue "." "identifier"
   47       | • lvalue "[" exp "]"
   48       | • "_lvalue" "(" "integer" ")"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "_cast"       shift, and go to state 5
    "for"         shift, and go to state 7
    "if"          shift, and go to state 9
    "let"         shift, and go to state 11
    "("           shift, and go to state 12
    "-"           shift, and go to state 13
    "new"         shift, and go to state 14
    "nil"         shift, and go to state 15
    "while"       shift, and go to state 19
    "_exp"        shift, and go to state 20
    "_lvalue"     shift, and go to state 21

    exp     go to state 106
    lvalue  go to state 25


State 60

   13 exp: • "integer"
   14    | • "nil"
   15    | • "string"
   16    | • "identifier" "[" exp "]" "of" exp
   17    | • "identifier" "{" rec "}"
   18    | • lvalue
   19    | • "identifier" "(" funcall ")"
   20    | • "-" exp
   21    | • exp "=" exp
   22    | • exp "+" exp
   23    | • exp "-" exp
   24    | • exp "*" exp
   25    | • exp "/" exp
   25    | exp "/" • exp
   26    | • exp ">=" exp
   27    | • exp "<=" exp
   28    | • exp "<>" exp
   29    | • exp ">" exp
   30    | • exp "<" exp
   31    | • exp "&" exp
   32    | • exp "|" exp
   33    | • "(" exps ")"
   34    | • lvalue ":=" exp
   35    | • "if" exp "then" exp "else" exp
   36    | • "if" exp "then" exp
   37    | • "while" exp "do" exp
   38    | • "for" "identifier" ":=" exp "to" exp "do" exp
   39    | • "break"
   40    | • "let" chunks "in" exps "end"
   41    | • "new" typeid
   42    | • lvalue "." "identifier" "(" funcall ")"
   43    | • "_cast" "(" exp "," ty ")"
   44    | • "_exp" "(" "integer" ")"
   45 lvalue: • "identifier"
   46       | • lvalue "." "identifier"
   47       | • lvalue "[" exp "]"
   48       | • "_lvalue" "(" "integer" ")"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "_cast"       shift, and go to state 5
    "for"         shift, and go to state 7
    "if"          shift, and go to state 9
    "let"         shift, and go to state 11
    "("           shift, and go to state 12
    "-"           shift, and go to state 13
    "new"         shift, and go to state 14
    "nil"         shift, and go to state 15
    "while"       shift, and go to state 19
    "_exp"        shift, and go to state 20
    "_lvalue"     shift, and go to state 21

    exp     go to state 107
    lvalue  go to state 25


State 61

   13 exp: • "integer"
   14    | • "nil"
   15    | • "string"
   16    | • "identifier" "[" exp "]" "of" exp
   17    | • "identifier" "{" rec "}"
   18    | • lvalue
   19    | • "identifier" "(" funcall ")"
   20    | • "-" exp
   21    | • exp "=" exp
   21    | exp "=" • exp
   22    | • exp "+" exp
   23    | • exp "-" exp
   24    | • exp "*" exp
   25    | • exp "/" exp
   26    | • exp ">=" exp
   27    | • exp "<=" exp
   28    | • exp "<>" exp
   29    | • exp ">" exp
   30    | • exp "<" exp
   31    | • exp "&" exp
   32    | • exp "|" exp
   33    | • "(" exps ")"
   34    | • lvalue ":=" exp
   35    | • "if" exp "then" exp "else" exp
   36    | • "if" exp "then" exp
   37    | • "while" exp "do" exp
   38    | • "for" "identifier" ":=" exp "to" exp "do" exp
   39    | • "break"
   40    | • "let" chunks "in" exps "end"
   41    | • "new" typeid
   42    | • lvalue "." "identifier" "(" funcall ")"
   43    | • "_cast" "(" exp "," ty ")"
   44    | • "_exp" "(" "integer" ")"
   45 lvalue: • "identifier"
   46       | • lvalue "." "identifier"
   47       | • lvalue "[" exp "]"
   48       | • "_lvalue" "(" "integer" ")"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "_cast"       shift, and go to state 5
    "for"         shift, and go to state 7
    "if"          shift, and go to state 9
    "let"         shift, and go to state 11
    "("           shift, and go to state 12
    "-"           shift, and go to state 13
    "new"         shift, and go to state 14
    "nil"         shift, and go to state 15
    "while"       shift, and go to state 19
    "_exp"        shift, and go to state 20
    "_lvalue"     shift, and go to state 21

    exp     go to state 108
    lvalue  go to state 25


State 62

   13 exp: • "integer"
   14    | • "nil"
   15    | • "string"
   16    | • "identifier" "[" exp "]" "of" exp
   17    | • "identifier" "{" rec "}"
   18    | • lvalue
   19    | • "identifier" "(" funcall ")"
   20    | • "-" exp
   21    | • exp "=" exp
   22    | • exp "+" exp
   23    | • exp "-" exp
   24    | • exp "*" exp
   25    | • exp "/" exp
   26    | • exp ">=" exp
   26    | exp ">=" • exp
   27    | • exp "<=" exp
   28    | • exp "<>" exp
   29    | • exp ">" exp
   30    | • exp "<" exp
   31    | • exp "&" exp
   32    | • exp "|" exp
   33    | • "(" exps ")"
   34    | • lvalue ":=" exp
   35    | • "if" exp "then" exp "else" exp
   36    | • "if" exp "then" exp
   37    | • "while" exp "do" exp
   38    | • "for" "identifier" ":=" exp "to" exp "do" exp
   39    | • "break"
   40    | • "let" chunks "in" exps "end"
   41    | • "new" typeid
   42    | • lvalue "." "identifier" "(" funcall ")"
   43    | • "_cast" "(" exp "," ty ")"
   44    | • "_exp" "(" "integer" ")"
   45 lvalue: • "identifier"
   46       | • lvalue "." "identifier"
   47       | • lvalue "[" exp "]"
   48       | • "_lvalue" "(" "integer" ")"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "_cast"       shift, and go to state 5
    "for"         shift, and go to state 7
    "if"          shift, and go to state 9
    "let"         shift, and go to state 11
    "("           shift, and go to state 12
    "-"           shift, and go to state 13
    "new"         shift, and go to state 14
    "nil"         shift, and go to state 15
    "while"       shift, and go to state 19
    "_exp"        shift, and go to state 20
    "_lvalue"     shift, and go to state 21

    exp     go to state 109
    lvalue  go to state 25


State 63

   13 exp: • "integer"
   14    | • "nil"
   15    | • "string"
   16    | • "identifier" "[" exp "]" "of" exp
   17    | • "identifier" "{" rec "}"
   18    | • lvalue
   19    | • "identifier" "(" funcall ")"
   20    | • "-" exp
   21    | • exp "=" exp
   22    | • exp "+" exp
   23    | • exp "-" exp
   24    | • exp "*" exp
   25    | • exp "/" exp
   26    | • exp ">=" exp
   27    | • exp "<=" exp
   28    | • exp "<>" exp
   29    | • exp ">" exp
   29    | exp ">" • exp
   30    | • exp "<" exp
   31    | • exp "&" exp
   32    | • exp "|" exp
   33    | • "(" exps ")"
   34    | • lvalue ":=" exp
   35    | • "if" exp "then" exp "else" exp
   36    | • "if" exp "then" exp
   37    | • "while" exp "do" exp
   38    | • "for" "identifier" ":=" exp "to" exp "do" exp
   39    | • "break"
   40    | • "let" chunks "in" exps "end"
   41    | • "new" typeid
   42    | • lvalue "." "identifier" "(" funcall ")"
   43    | • "_cast" "(" exp "," ty ")"
   44    | • "_exp" "(" "integer" ")"
   45 lvalue: • "identifier"
   46       | • lvalue "." "identifier"
   47       | • lvalue "[" exp "]"
   48       | • "_lvalue" "(" "integer" ")"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "_cast"       shift, and go to state 5
    "for"         shift, and go to state 7
    "if"          shift, and go to state 9
    "let"         shift, and go to state 11
    "("           shift, and go to state 12
    "-"           shift, and go to state 13
    "new"         shift, and go to state 14
    "nil"         shift, and go to state 15
    "while"       shift, and go to state 19
    "_exp"        shift, and go to state 20
    "_lvalue"     shift, and go to state 21

    exp     go to state 110
    lvalue  go to state 25


State 64

   13 exp: • "integer"
   14    | • "nil"
   15    | • "string"
   16    | • "identifier" "[" exp "]" "of" exp
   17    | • "identifier" "{" rec "}"
   18    | • lvalue
   19    | • "identifier" "(" funcall ")"
   20    | • "-" exp
   21    | • exp "=" exp
   22    | • exp "+" exp
   23    | • exp "-" exp
   24    | • exp "*" exp
   25    | • exp "/" exp
   26    | • exp ">=" exp
   27    | • exp "<=" exp
   27    | exp "<=" • exp
   28    | • exp "<>" exp
   29    | • exp ">" exp
   30    | • exp "<" exp
   31    | • exp "&" exp
   32    | • exp "|" exp
   33    | • "(" exps ")"
   34    | • lvalue ":=" exp
   35    | • "if" exp "then" exp "else" exp
   36    | • "if" exp "then" exp
   37    | • "while" exp "do" exp
   38    | • "for" "identifier" ":=" exp "to" exp "do" exp
   39    | • "break"
   40    | • "let" chunks "in" exps "end"
   41    | • "new" typeid
   42    | • lvalue "." "identifier" "(" funcall ")"
   43    | • "_cast" "(" exp "," ty ")"
   44    | • "_exp" "(" "integer" ")"
   45 lvalue: • "identifier"
   46       | • lvalue "." "identifier"
   47       | • lvalue "[" exp "]"
   48       | • "_lvalue" "(" "integer" ")"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "_cast"       shift, and go to state 5
    "for"         shift, and go to state 7
    "if"          shift, and go to state 9
    "let"         shift, and go to state 11
    "("           shift, and go to state 12
    "-"           shift, and go to state 13
    "new"         shift, and go to state 14
    "nil"         shift, and go to state 15
    "while"       shift, and go to state 19
    "_exp"        shift, and go to state 20
    "_lvalue"     shift, and go to state 21

    exp     go to state 111
    lvalue  go to state 25


State 65

   13 exp: • "integer"
   14    | • "nil"
   15    | • "string"
   16    | • "identifier" "[" exp "]" "of" exp
   17    | • "identifier" "{" rec "}"
   18    | • lvalue
   19    | • "identifier" "(" funcall ")"
   20    | • "-" exp
   21    | • exp "=" exp
   22    | • exp "+" exp
   23    | • exp "-" exp
   24    | • exp "*" exp
   25    | • exp "/" exp
   26    | • exp ">=" exp
   27    | • exp "<=" exp
   28    | • exp "<>" exp
   29    | • exp ">" exp
   30    | • exp "<" exp
   30    | exp "<" • exp
   31    | • exp "&" exp
   32    | • exp "|" exp
   33    | • "(" exps ")"
   34    | • lvalue ":=" exp
   35    | • "if" exp "then" exp "else" exp
   36    | • "if" exp "then" exp
   37    | • "while" exp "do" exp
   38    | • "for" "identifier" ":=" exp "to" exp "do" exp
   39    | • "break"
   40    | • "let" chunks "in" exps "end"
   41    | • "new" typeid
   42    | • lvalue "." "identifier" "(" funcall ")"
   43    | • "_cast" "(" exp "," ty ")"
   44    | • "_exp" "(" "integer" ")"
   45 lvalue: • "identifier"
   46       | • lvalue "." "identifier"
   47       | • lvalue "[" exp "]"
   48       | • "_lvalue" "(" "integer" ")"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "_cast"       shift, and go to state 5
    "for"         shift, and go to state 7
    "if"          shift, and go to state 9
    "let"         shift, and go to state 11
    "("           shift, and go to state 12
    "-"           shift, and go to state 13
    "new"         shift, and go to state 14
    "nil"         shift, and go to state 15
    "while"       shift, and go to state 19
    "_exp"        shift, and go to state 20
    "_lvalue"     shift, and go to state 21

    exp     go to state 112
    lvalue  go to state 25


State 66

   13 exp: • "integer"
   14    | • "nil"
   15    | • "string"
   16    | • "identifier" "[" exp "]" "of" exp
   17    | • "identifier" "{" rec "}"
   18    | • lvalue
   19    | • "identifier" "(" funcall ")"
   20    | • "-" exp
   21    | • exp "=" exp
   22    | • exp "+" exp
   23    | • exp "-" exp
   23    | exp "-" • exp
   24    | • exp "*" exp
   25    | • exp "/" exp
   26    | • exp ">=" exp
   27    | • exp "<=" exp
   28    | • exp "<>" exp
   29    | • exp ">" exp
   30    | • exp "<" exp
   31    | • exp "&" exp
   32    | • exp "|" exp
   33    | • "(" exps ")"
   34    | • lvalue ":=" exp
   35    | • "if" exp "then" exp "else" exp
   36    | • "if" exp "then" exp
   37    | • "while" exp "do" exp
   38    | • "for" "identifier" ":=" exp "to" exp "do" exp
   39    | • "break"
   40    | • "let" chunks "in" exps "end"
   41    | • "new" typeid
   42    | • lvalue "." "identifier" "(" funcall ")"
   43    | • "_cast" "(" exp "," ty ")"
   44    | • "_exp" "(" "integer" ")"
   45 lvalue: • "identifier"
   46       | • lvalue "." "identifier"
   47       | • lvalue "[" exp "]"
   48       | • "_lvalue" "(" "integer" ")"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "_cast"       shift, and go to state 5
    "for"         shift, and go to state 7
    "if"          shift, and go to state 9
    "let"         shift, and go to state 11
    "("           shift, and go to state 12
    "-"           shift, and go to state 13
    "new"         shift, and go to state 14
    "nil"         shift, and go to state 15
    "while"       shift, and go to state 19
    "_exp"        shift, and go to state 20
    "_lvalue"     shift, and go to state 21

    exp     go to state 113
    lvalue  go to state 25


State 67

   13 exp: • "integer"
   14    | • "nil"
   15    | • "string"
   16    | • "identifier" "[" exp "]" "of" exp
   17    | • "identifier" "{" rec "}"
   18    | • lvalue
   19    | • "identifier" "(" funcall ")"
   20    | • "-" exp
   21    | • exp "=" exp
   22    | • exp "+" exp
   23    | • exp "-" exp
   24    | • exp "*" exp
   25    | • exp "/" exp
   26    | • exp ">=" exp
   27    | • exp "<=" exp
   28    | • exp "<>" exp
   28    | exp "<>" • exp
   29    | • exp ">" exp
   30    | • exp "<" exp
   31    | • exp "&" exp
   32    | • exp "|" exp
   33    | • "(" exps ")"
   34    | • lvalue ":=" exp
   35    | • "if" exp "then" exp "else" exp
   36    | • "if" exp "then" exp
   37    | • "while" exp "do" exp
   38    | • "for" "identifier" ":=" exp "to" exp "do" exp
   39    | • "break"
   40    | • "let" chunks "in" exps "end"
   41    | • "new" typeid
   42    | • lvalue "." "identifier" "(" funcall ")"
   43    | • "_cast" "(" exp "," ty ")"
   44    | • "_exp" "(" "integer" ")"
   45 lvalue: • "identifier"
   46       | • lvalue "." "identifier"
   47       | • lvalue "[" exp "]"
   48       | • "_lvalue" "(" "integer" ")"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "_cast"       shift, and go to state 5
    "for"         shift, and go to state 7
    "if"          shift, and go to state 9
    "let"         shift, and go to state 11
    "("           shift, and go to state 12
    "-"           shift, and go to state 13
    "new"         shift, and go to state 14
    "nil"         shift, and go to state 15
    "while"       shift, and go to state 19
    "_exp"        shift, and go to state 20
    "_lvalue"     shift, and go to state 21

    exp     go to state 114
    lvalue  go to state 25


State 68

   13 exp: • "integer"
   14    | • "nil"
   15    | • "string"
   16    | • "identifier" "[" exp "]" "of" exp
   17    | • "identifier" "{" rec "}"
   18    | • lvalue
   19    | • "identifier" "(" funcall ")"
   20    | • "-" exp
   21    | • exp "=" exp
   22    | • exp "+" exp
   23    | • exp "-" exp
   24    | • exp "*" exp
   25    | • exp "/" exp
   26    | • exp ">=" exp
   27    | • exp "<=" exp
   28    | • exp "<>" exp
   29    | • exp ">" exp
   30    | • exp "<" exp
   31    | • exp "&" exp
   32    | • exp "|" exp
   32    | exp "|" • exp
   33    | • "(" exps ")"
   34    | • lvalue ":=" exp
   35    | • "if" exp "then" exp "else" exp
   36    | • "if" exp "then" exp
   37    | • "while" exp "do" exp
   38    | • "for" "identifier" ":=" exp "to" exp "do" exp
   39    | • "break"
   40    | • "let" chunks "in" exps "end"
   41    | • "new" typeid
   42    | • lvalue "." "identifier" "(" funcall ")"
   43    | • "_cast" "(" exp "," ty ")"
   44    | • "_exp" "(" "integer" ")"
   45 lvalue: • "identifier"
   46       | • lvalue "." "identifier"
   47       | • lvalue "[" exp "]"
   48       | • "_lvalue" "(" "integer" ")"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "_cast"       shift, and go to state 5
    "for"         shift, and go to state 7
    "if"          shift, and go to state 9
    "let"         shift, and go to state 11
    "("           shift, and go to state 12
    "-"           shift, and go to state 13
    "new"         shift, and go to state 14
    "nil"         shift, and go to state 15
    "while"       shift, and go to state 19
    "_exp"        shift, and go to state 20
    "_lvalue"     shift, and go to state 21

    exp     go to state 115
    lvalue  go to state 25


State 69

   13 exp: • "integer"
   14    | • "nil"
   15    | • "string"
   16    | • "identifier" "[" exp "]" "of" exp
   17    | • "identifier" "{" rec "}"
   18    | • lvalue
   19    | • "identifier" "(" funcall ")"
   20    | • "-" exp
   21    | • exp "=" exp
   22    | • exp "+" exp
   22    | exp "+" • exp
   23    | • exp "-" exp
   24    | • exp "*" exp
   25    | • exp "/" exp
   26    | • exp ">=" exp
   27    | • exp "<=" exp
   28    | • exp "<>" exp
   29    | • exp ">" exp
   30    | • exp "<" exp
   31    | • exp "&" exp
   32    | • exp "|" exp
   33    | • "(" exps ")"
   34    | • lvalue ":=" exp
   35    | • "if" exp "then" exp "else" exp
   36    | • "if" exp "then" exp
   37    | • "while" exp "do" exp
   38    | • "for" "identifier" ":=" exp "to" exp "do" exp
   39    | • "break"
   40    | • "let" chunks "in" exps "end"
   41    | • "new" typeid
   42    | • lvalue "." "identifier" "(" funcall ")"
   43    | • "_cast" "(" exp "," ty ")"
   44    | • "_exp" "(" "integer" ")"
   45 lvalue: • "identifier"
   46       | • lvalue "." "identifier"
   47       | • lvalue "[" exp "]"
   48       | • "_lvalue" "(" "integer" ")"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "_cast"       shift, and go to state 5
    "for"         shift, and go to state 7
    "if"          shift, and go to state 9
    "let"         shift, and go to state 11
    "("           shift, and go to state 12
    "-"           shift, and go to state 13
    "new"         shift, and go to state 14
    "nil"         shift, and go to state 15
    "while"       shift, and go to state 19
    "_exp"        shift, and go to state 20
    "_lvalue"     shift, and go to state 21

    exp     go to state 116
    lvalue  go to state 25


State 70

   13 exp: • "integer"
   14    | • "nil"
   15    | • "string"
   16    | • "identifier" "[" exp "]" "of" exp
   17    | • "identifier" "{" rec "}"
   18    | • lvalue
   19    | • "identifier" "(" funcall ")"
   20    | • "-" exp
   21    | • exp "=" exp
   22    | • exp "+" exp
   23    | • exp "-" exp
   24    | • exp "*" exp
   24    | exp "*" • exp
   25    | • exp "/" exp
   26    | • exp ">=" exp
   27    | • exp "<=" exp
   28    | • exp "<>" exp
   29    | • exp ">" exp
   30    | • exp "<" exp
   31    | • exp "&" exp
   32    | • exp "|" exp
   33    | • "(" exps ")"
   34    | • lvalue ":=" exp
   35    | • "if" exp "then" exp "else" exp
   36    | • "if" exp "then" exp
   37    | • "while" exp "do" exp
   38    | • "for" "identifier" ":=" exp "to" exp "do" exp
   39    | • "break"
   40    | • "let" chunks "in" exps "end"
   41    | • "new" typeid
   42    | • lvalue "." "identifier" "(" funcall ")"
   43    | • "_cast" "(" exp "," ty ")"
   44    | • "_exp" "(" "integer" ")"
   45 lvalue: • "identifier"
   46       | • lvalue "." "identifier"
   47       | • lvalue "[" exp "]"
   48       | • "_lvalue" "(" "integer" ")"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "_cast"       shift, and go to state 5
    "for"         shift, and go to state 7
    "if"          shift, and go to state 9
    "let"         shift, and go to state 11
    "("           shift, and go to state 12
    "-"           shift, and go to state 13
    "new"         shift, and go to state 14
    "nil"         shift, and go to state 15
    "while"       shift, and go to state 19
    "_exp"        shift, and go to state 20
    "_lvalue"     shift, and go to state 21

    exp     go to state 117
    lvalue  go to state 25


State 71

   13 exp: • "integer"
   14    | • "nil"
   15    | • "string"
   16    | • "identifier" "[" exp "]" "of" exp
   17    | • "identifier" "{" rec "}"
   18    | • lvalue
   19    | • "identifier" "(" funcall ")"
   20    | • "-" exp
   21    | • exp "=" exp
   22    | • exp "+" exp
   23    | • exp "-" exp
   24    | • exp "*" exp
   25    | • exp "/" exp
   26    | • exp ">=" exp
   27    | • exp "<=" exp
   28    | • exp "<>" exp
   29    | • exp ">" exp
   30    | • exp "<" exp
   31    | • exp "&" exp
   32    | • exp "|" exp
   33    | • "(" exps ")"
   34    | • lvalue ":=" exp
   34    | lvalue ":=" • exp
   35    | • "if" exp "then" exp "else" exp
   36    | • "if" exp "then" exp
   37    | • "while" exp "do" exp
   38    | • "for" "identifier" ":=" exp "to" exp "do" exp
   39    | • "break"
   40    | • "let" chunks "in" exps "end"
   41    | • "new" typeid
   42    | • lvalue "." "identifier" "(" funcall ")"
   43    | • "_cast" "(" exp "," ty ")"
   44    | • "_exp" "(" "integer" ")"
   45 lvalue: • "identifier"
   46       | • lvalue "." "identifier"
   47       | • lvalue "[" exp "]"
   48       | • "_lvalue" "(" "integer" ")"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "_cast"       shift, and go to state 5
    "for"         shift, and go to state 7
    "if"          shift, and go to state 9
    "let"         shift, and go to state 11
    "("           shift, and go to state 12
    "-"           shift, and go to state 13
    "new"         shift, and go to state 14
    "nil"         shift, and go to state 15
    "while"       shift, and go to state 19
    "_exp"        shift, and go to state 20
    "_lvalue"     shift, and go to state 21

    exp     go to state 118
    lvalue  go to state 25


State 72

   42 exp: lvalue "." • "identifier" "(" funcall ")"
   46 lvalue: lvalue "." • "identifier"

    "identifier"  shift, and go to state 119


State 73

   13 exp: • "integer"
   14    | • "nil"
   15    | • "string"
   16    | • "identifier" "[" exp "]" "of" exp
   17    | • "identifier" "{" rec "}"
   18    | • lvalue
   19    | • "identifier" "(" funcall ")"
   20    | • "-" exp
   21    | • exp "=" exp
   22    | • exp "+" exp
   23    | • exp "-" exp
   24    | • exp "*" exp
   25    | • exp "/" exp
   26    | • exp ">=" exp
   27    | • exp "<=" exp
   28    | • exp "<>" exp
   29    | • exp ">" exp
   30    | • exp "<" exp
   31    | • exp "&" exp
   32    | • exp "|" exp
   33    | • "(" exps ")"
   34    | • lvalue ":=" exp
   35    | • "if" exp "then" exp "else" exp
   36    | • "if" exp "then" exp
   37    | • "while" exp "do" exp
   38    | • "for" "identifier" ":=" exp "to" exp "do" exp
   39    | • "break"
   40    | • "let" chunks "in" exps "end"
   41    | • "new" typeid
   42    | • lvalue "." "identifier" "(" funcall ")"
   43    | • "_cast" "(" exp "," ty ")"
   44    | • "_exp" "(" "integer" ")"
   45 lvalue: • "identifier"
   46       | • lvalue "." "identifier"
   47       | • lvalue "[" exp "]"
   47       | lvalue "[" • exp "]"
   48       | • "_lvalue" "(" "integer" ")"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "_cast"       shift, and go to state 5
    "for"         shift, and go to state 7
    "if"          shift, and go to state 9
    "let"         shift, and go to state 11
    "("           shift, and go to state 12
    "-"           shift, and go to state 13
    "new"         shift, and go to state 14
    "nil"         shift, and go to state 15
    "while"       shift, and go to state 19
    "_exp"        shift, and go to state 20
    "_lvalue"     shift, and go to state 21

    exp     go to state 120
    lvalue  go to state 25


State 74

   56 chunks: funchunk chunks •

    $default  reduce using rule 56 (chunks)


State 75

   61 funchunk: fundec funchunk •

    $default  reduce using rule 61 (funchunk)


State 76

   57 chunks: varchunk chunks •

    $default  reduce using rule 57 (chunks)


State 77

   55 chunks: tychunk chunks •

    $default  reduce using rule 55 (chunks)


State 78

   70 tychunk: tydec tychunk •

    $default  reduce using rule 70 (tychunk)


State 79

   12 rec.2: "identifier" • "=" exp

    "="  shift, and go to state 121


State 80

   17 exp: "identifier" "{" rec • "}"

    "}"  shift, and go to state 122


State 81

    9 rec: rec.1 •  ["}"]
   10 rec.1: rec.1 • "," rec.2

    ","  shift, and go to state 123

    $default  reduce using rule 9 (rec)


State 82

   11 rec.1: rec.2 •

    $default  reduce using rule 11 (rec.1)


State 83

   16 exp: "identifier" "[" exp • "]" "of" exp
   21    | exp • "=" exp
   22    | exp • "+" exp
   23    | exp • "-" exp
   24    | exp • "*" exp
   25    | exp • "/" exp
   26    | exp • ">=" exp
   27    | exp • "<=" exp
   28    | exp • "<>" exp
   29    | exp • ">" exp
   30    | exp • "<" exp
   31    | exp • "&" exp
   32    | exp • "|" exp

    "&"   shift, and go to state 59
    "/"   shift, and go to state 60
    "="   shift, and go to state 61
    ">="  shift, and go to state 62
    ">"   shift, and go to state 63
    "<="  shift, and go to state 64
    "<"   shift, and go to state 65
    "-"   shift, and go to state 66
    "<>"  shift, and go to state 67
    "|"   shift, and go to state 68
    "+"   shift, and go to state 69
    "]"   shift, and go to state 124
    "*"   shift, and go to state 70


State 84

   21 exp: exp • "=" exp
   22    | exp • "+" exp
   23    | exp • "-" exp
   24    | exp • "*" exp
   25    | exp • "/" exp
   26    | exp • ">=" exp
   27    | exp • "<=" exp
   28    | exp • "<>" exp
   29    | exp • ">" exp
   30    | exp • "<" exp
   31    | exp • "&" exp
   32    | exp • "|" exp
   53 funcall.2: exp •  [",", ")"]

    "&"   shift, and go to state 59
    "/"   shift, and go to state 60
    "="   shift, and go to state 61
    ">="  shift, and go to state 62
    ">"   shift, and go to state 63
    "<="  shift, and go to state 64
    "<"   shift, and go to state 65
    "-"   shift, and go to state 66
    "<>"  shift, and go to state 67
    "|"   shift, and go to state 68
    "+"   shift, and go to state 69
    "*"   shift, and go to state 70

    $default  reduce using rule 53 (funcall.2)


State 85

   19 exp: "identifier" "(" funcall • ")"

    ")"  shift, and go to state 125


State 86

   50 funcall: funcall.1 •  [")"]
   51 funcall.1: funcall.1 • "," funcall.2

    ","  shift, and go to state 126

    $default  reduce using rule 50 (funcall)


State 87

   52 funcall.1: funcall.2 •

    $default  reduce using rule 52 (funcall.1)


State 88

   21 exp: exp • "=" exp
   22    | exp • "+" exp
   23    | exp • "-" exp
   24    | exp • "*" exp
   25    | exp • "/" exp
   26    | exp • ">=" exp
   27    | exp • "<=" exp
   28    | exp • "<>" exp
   29    | exp • ">" exp
   30    | exp • "<" exp
   31    | exp • "&" exp
   32    | exp • "|" exp
   43    | "_cast" "(" exp • "," ty ")"

    "&"   shift, and go to state 59
    ","   shift, and go to state 127
    "/"   shift, and go to state 60
    "="   shift, and go to state 61
    ">="  shift, and go to state 62
    ">"   shift, and go to state 63
    "<="  shift, and go to state 64
    "<"   shift, and go to state 65
    "-"   shift, and go to state 66
    "<>"  shift, and go to state 67
    "|"   shift, and go to state 68
    "+"   shift, and go to state 69
    "*"   shift, and go to state 70


State 89

   72 tydec: "class" "identifier" "extends" • typeid "{" classfields "}"
   96 typeid: • "identifier"
   97       | • "_namety" "(" "integer" ")"

    "identifier"  shift, and go to state 48
    "_namety"     shift, and go to state 49

    typeid  go to state 128


State 90

   66 varchunk: • vardec
   67 vardec: • "var" "identifier" ":=" exp
   68       | • "var" "identifier" ":" typeid ":=" exp
   73 tydec: "class" "identifier" "{" • classfields "}"
   89 classfields: ε •  ["}"]
   90            | • varchunk classfields
   91            | • methchunk classfields
   92 methchunk: • methdec
   93          | • methdec methchunk
   94 methdec: • "method" "identifier" "(" tyvarchunks ")" "=" exp
   95        | • "method" "identifier" "(" tyvarchunks ")" ":" typeid "=" exp

    "method"  shift, and go to state 129
    "var"     shift, and go to state 18

    $default  reduce using rule 89 (classfields)

    varchunk     go to state 130
    vardec       go to state 30
    classfields  go to state 131
    methchunk    go to state 132
    methdec      go to state 133


State 91

   13 exp: • "integer"
   14    | • "nil"
   15    | • "string"
   16    | • "identifier" "[" exp "]" "of" exp
   17    | • "identifier" "{" rec "}"
   18    | • lvalue
   19    | • "identifier" "(" funcall ")"
   20    | • "-" exp
   21    | • exp "=" exp
   22    | • exp "+" exp
   23    | • exp "-" exp
   24    | • exp "*" exp
   25    | • exp "/" exp
   26    | • exp ">=" exp
   27    | • exp "<=" exp
   28    | • exp "<>" exp
   29    | • exp ">" exp
   30    | • exp "<" exp
   31    | • exp "&" exp
   32    | • exp "|" exp
   33    | • "(" exps ")"
   34    | • lvalue ":=" exp
   35    | • "if" exp "then" exp "else" exp
   36    | • "if" exp "then" exp
   37    | • "while" exp "do" exp
   38    | • "for" "identifier" ":=" exp "to" exp "do" exp
   38    | "for" "identifier" ":=" • exp "to" exp "do" exp
   39    | • "break"
   40    | • "let" chunks "in" exps "end"
   41    | • "new" typeid
   42    | • lvalue "." "identifier" "(" funcall ")"
   43    | • "_cast" "(" exp "," ty ")"
   44    | • "_exp" "(" "integer" ")"
   45 lvalue: • "identifier"
   46       | • lvalue "." "identifier"
   47       | • lvalue "[" exp "]"
   48       | • "_lvalue" "(" "integer" ")"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "_cast"       shift, and go to state 5
    "for"         shift, and go to state 7
    "if"          shift, and go to state 9
    "let"         shift, and go to state 11
    "("           shift, and go to state 12
    "-"           shift, and go to state 13
    "new"         shift, and go to state 14
    "nil"         shift, and go to state 15
    "while"       shift, and go to state 19
    "_exp"        shift, and go to state 20
    "_lvalue"     shift, and go to state 21

    exp     go to state 134
    lvalue  go to state 25


State 92

   62 fundec: "function" "identifier" "(" • tyvarchunks ")" "=" exp
   63       | "function" "identifier" "(" • tyvarchunks ")" ":" typeid "=" exp
   84 tyvarchunks: ε •  [")"]
   85            | • tyvarchunks.1
   86 tyvarchunks.1: • tyvarchunks.1 "," tyvardec
   87              | • tyvardec
   88 tyvardec: • "identifier" ":" typeid

    "identifier"  shift, and go to state 135

    $default  reduce using rule 84 (tyvarchunks)

    tyvarchunks    go to state 136
    tyvarchunks.1  go to state 137
    tyvardec       go to state 138


State 93

   13 exp: • "integer"
   14    | • "nil"
   15    | • "string"
   16    | • "identifier" "[" exp "]" "of" exp
   17    | • "identifier" "{" rec "}"
   18    | • lvalue
   19    | • "identifier" "(" funcall ")"
   20    | • "-" exp
   21    | • exp "=" exp
   22    | • exp "+" exp
   23    | • exp "-" exp
   24    | • exp "*" exp
   25    | • exp "/" exp
   26    | • exp ">=" exp
   27    | • exp "<=" exp
   28    | • exp "<>" exp
   29    | • exp ">" exp
   30    | • exp "<" exp
   31    | • exp "&" exp
   32    | • exp "|" exp
   33    | • "(" exps ")"
   34    | • lvalue ":=" exp
   35    | • "if" exp "then" exp "else" exp
   35    | "if" exp "then" • exp "else" exp
   36    | • "if" exp "then" exp
   36    | "if" exp "then" • exp
   37    | • "while" exp "do" exp
   38    | • "for" "identifier" ":=" exp "to" exp "do" exp
   39    | • "break"
   40    | • "let" chunks "in" exps "end"
   41    | • "new" typeid
   42    | • lvalue "." "identifier" "(" funcall ")"
   43    | • "_cast" "(" exp "," ty ")"
   44    | • "_exp" "(" "integer" ")"
   45 lvalue: • "identifier"
   46       | • lvalue "." "identifier"
   47       | • lvalue "[" exp "]"
   48       | • "_lvalue" "(" "integer" ")"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "_cast"       shift, and go to state 5
    "for"         shift, and go to state 7
    "if"          shift, and go to state 9
    "let"         shift, and go to state 11
    "("           shift, and go to state 12
    "-"           shift, and go to state 13
    "new"         shift, and go to state 14
    "nil"         shift, and go to state 15
    "while"       shift, and go to state 19
    "_exp"        shift, and go to state 20
    "_lvalue"     shift, and go to state 21

    exp     go to state 139
    lvalue  go to state 25


State 94

    3 exps: ε •  ["end"]
    4     | • exps.1
    5 exps.1: • exps.1 ";" exps.2
    6       | • exps.2
    7 exps.2: • exp
   13 exp: • "integer"
   14    | • "nil"
   15    | • "string"
   16    | • "identifier" "[" exp "]" "of" exp
   17    | • "identifier" "{" rec "}"
   18    | • lvalue
   19    | • "identifier" "(" funcall ")"
   20    | • "-" exp
   21    | • exp "=" exp
   22    | • exp "+" exp
   23    | • exp "-" exp
   24    | • exp "*" exp
   25    | • exp "/" exp
   26    | • exp ">=" exp
   27    | • exp "<=" exp
   28    | • exp "<>" exp
   29    | • exp ">" exp
   30    | • exp "<" exp
   31    | • exp "&" exp
   32    | • exp "|" exp
   33    | • "(" exps ")"
   34    | • lvalue ":=" exp
   35    | • "if" exp "then" exp "else" exp
   36    | • "if" exp "then" exp
   37    | • "while" exp "do" exp
   38    | • "for" "identifier" ":=" exp "to" exp "do" exp
   39    | • "break"
   40    | • "let" chunks "in" exps "end"
   40    | "let" chunks "in" • exps "end"
   41    | • "new" typeid
   42    | • lvalue "." "identifier" "(" funcall ")"
   43    | • "_cast" "(" exp "," ty ")"
   44    | • "_exp" "(" "integer" ")"
   45 lvalue: • "identifier"
   46       | • lvalue "." "identifier"
   47       | • lvalue "[" exp "]"
   48       | • "_lvalue" "(" "integer" ")"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "_cast"       shift, and go to state 5
    "for"         shift, and go to state 7
    "if"          shift, and go to state 9
    "let"         shift, and go to state 11
    "("           shift, and go to state 12
    "-"           shift, and go to state 13
    "new"         shift, and go to state 14
    "nil"         shift, and go to state 15
    "while"       shift, and go to state 19
    "_exp"        shift, and go to state 20
    "_lvalue"     shift, and go to state 21

    $default  reduce using rule 3 (exps)

    exps    go to state 140
    exps.1  go to state 44
    exps.2  go to state 45
    exp     go to state 46
    lvalue  go to state 25


State 95

   33 exp: "(" exps ")" •

    $default  reduce using rule 33 (exp)


State 96

    5 exps.1: exps.1 ";" • exps.2
    7 exps.2: • exp
   13 exp: • "integer"
   14    | • "nil"
   15    | • "string"
   16    | • "identifier" "[" exp "]" "of" exp
   17    | • "identifier" "{" rec "}"
   18    | • lvalue
   19    | • "identifier" "(" funcall ")"
   20    | • "-" exp
   21    | • exp "=" exp
   22    | • exp "+" exp
   23    | • exp "-" exp
   24    | • exp "*" exp
   25    | • exp "/" exp
   26    | • exp ">=" exp
   27    | • exp "<=" exp
   28    | • exp "<>" exp
   29    | • exp ">" exp
   30    | • exp "<" exp
   31    | • exp "&" exp
   32    | • exp "|" exp
   33    | • "(" exps ")"
   34    | • lvalue ":=" exp
   35    | • "if" exp "then" exp "else" exp
   36    | • "if" exp "then" exp
   37    | • "while" exp "do" exp
   38    | • "for" "identifier" ":=" exp "to" exp "do" exp
   39    | • "break"
   40    | • "let" chunks "in" exps "end"
   41    | • "new" typeid
   42    | • lvalue "." "identifier" "(" funcall ")"
   43    | • "_cast" "(" exp "," ty ")"
   44    | • "_exp" "(" "integer" ")"
   45 lvalue: • "identifier"
   46       | • lvalue "." "identifier"
   47       | • lvalue "[" exp "]"
   48       | • "_lvalue" "(" "integer" ")"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "_cast"       shift, and go to state 5
    "for"         shift, and go to state 7
    "if"          shift, and go to state 9
    "let"         shift, and go to state 11
    "("           shift, and go to state 12
    "-"           shift, and go to state 13
    "new"         shift, and go to state 14
    "nil"         shift, and go to state 15
    "while"       shift, and go to state 19
    "_exp"        shift, and go to state 20
    "_lvalue"     shift, and go to state 21

    exps.2  go to state 141
    exp     go to state 46
    lvalue  go to state 25


State 97

   97 typeid: "_namety" "(" • "integer" ")"

    "integer"  shift, and go to state 142


State 98

   64 fundec: "primitive" "identifier" "(" • tyvarchunks ")"
   65       | "primitive" "identifier" "(" • tyvarchunks ")" ":" typeid
   84 tyvarchunks: ε •  [")"]
   85            | • tyvarchunks.1
   86 tyvarchunks.1: • tyvarchunks.1 "," tyvardec
   87              | • tyvardec
   88 tyvardec: • "identifier" ":" typeid

    "identifier"  shift, and go to state 135

    $default  reduce using rule 84 (tyvarchunks)

    tyvarchunks    go to state 143
    tyvarchunks.1  go to state 137
    tyvardec       go to state 138


State 99

   71 tydec: "type" "identifier" "=" • ty
   74 ty: • typeid
   75   | • "{" tyfields "}"
   76   | • "array" "of" typeid
   77   | • "class" "extends" typeid "{" classfields "}"
   78   | • "class" "{" classfields "}"
   96 typeid: • "identifier"
   97       | • "_namety" "(" "integer" ")"

    "identifier"  shift, and go to state 48
    "array"       shift, and go to state 144
    "class"       shift, and go to state 145
    "{"           shift, and go to state 146
    "_namety"     shift, and go to state 49

    ty      go to state 147
    typeid  go to state 148


State 100

   13 exp: • "integer"
   14    | • "nil"
   15    | • "string"
   16    | • "identifier" "[" exp "]" "of" exp
   17    | • "identifier" "{" rec "}"
   18    | • lvalue
   19    | • "identifier" "(" funcall ")"
   20    | • "-" exp
   21    | • exp "=" exp
   22    | • exp "+" exp
   23    | • exp "-" exp
   24    | • exp "*" exp
   25    | • exp "/" exp
   26    | • exp ">=" exp
   27    | • exp "<=" exp
   28    | • exp "<>" exp
   29    | • exp ">" exp
   30    | • exp "<" exp
   31    | • exp "&" exp
   32    | • exp "|" exp
   33    | • "(" exps ")"
   34    | • lvalue ":=" exp
   35    | • "if" exp "then" exp "else" exp
   36    | • "if" exp "then" exp
   37    | • "while" exp "do" exp
   38    | • "for" "identifier" ":=" exp "to" exp "do" exp
   39    | • "break"
   40    | • "let" chunks "in" exps "end"
   41    | • "new" typeid
   42    | • lvalue "." "identifier" "(" funcall ")"
   43    | • "_cast" "(" exp "," ty ")"
   44    | • "_exp" "(" "integer" ")"
   45 lvalue: • "identifier"
   46       | • lvalue "." "identifier"
   47       | • lvalue "[" exp "]"
   48       | • "_lvalue" "(" "integer" ")"
   67 vardec: "var" "identifier" ":=" • exp

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "_cast"       shift, and go to state 5
    "for"         shift, and go to state 7
    "if"          shift, and go to state 9
    "let"         shift, and go to state 11
    "("           shift, and go to state 12
    "-"           shift, and go to state 13
    "new"         shift, and go to state 14
    "nil"         shift, and go to state 15
    "while"       shift, and go to state 19
    "_exp"        shift, and go to state 20
    "_lvalue"     shift, and go to state 21

    exp     go to state 149
    lvalue  go to state 25


State 101

   68 vardec: "var" "identifier" ":" • typeid ":=" exp
   96 typeid: • "identifier"
   97       | • "_namety" "(" "integer" ")"

    "identifier"  shift, and go to state 48
    "_namety"     shift, and go to state 49

    typeid  go to state 150


State 102

   13 exp: • "integer"
   14    | • "nil"
   15    | • "string"
   16    | • "identifier" "[" exp "]" "of" exp
   17    | • "identifier" "{" rec "}"
   18    | • lvalue
   19    | • "identifier" "(" funcall ")"
   20    | • "-" exp
   21    | • exp "=" exp
   22    | • exp "+" exp
   23    | • exp "-" exp
   24    | • exp "*" exp
   25    | • exp "/" exp
   26    | • exp ">=" exp
   27    | • exp "<=" exp
   28    | • exp "<>" exp
   29    | • exp ">" exp
   30    | • exp "<" exp
   31    | • exp "&" exp
   32    | • exp "|" exp
   33    | • "(" exps ")"
   34    | • lvalue ":=" exp
   35    | • "if" exp "then" exp "else" exp
   36    | • "if" exp "then" exp
   37    | • "while" exp "do" exp
   37    | "while" exp "do" • exp
   38    | • "for" "identifier" ":=" exp "to" exp "do" exp
   39    | • "break"
   40    | • "let" chunks "in" exps "end"
   41    | • "new" typeid
   42    | • lvalue "." "identifier" "(" funcall ")"
   43    | • "_cast" "(" exp "," ty ")"
   44    | • "_exp" "(" "integer" ")"
   45 lvalue: • "identifier"
   46       | • lvalue "." "identifier"
   47       | • lvalue "[" exp "]"
   48       | • "_lvalue" "(" "integer" ")"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "_cast"       shift, and go to state 5
    "for"         shift, and go to state 7
    "if"          shift, and go to state 9
    "let"         shift, and go to state 11
    "("           shift, and go to state 12
    "-"           shift, and go to state 13
    "new"         shift, and go to state 14
    "nil"         shift, and go to state 15
    "while"       shift, and go to state 19
    "_exp"        shift, and go to state 20
    "_lvalue"     shift, and go to state 21

    exp     go to state 151
    lvalue  go to state 25


State 103

   44 exp: "_exp" "(" "integer" • ")"

    ")"  shift, and go to state 152


State 104

   48 lvalue: "_lvalue" "(" "integer" • ")"

    ")"  shift, and go to state 153


State 105

   59 chunks: "_chunks" "(" "integer" • ")" chunks

    ")"  shift, and go to state 154


State 106

   21 exp: exp • "=" exp
   22    | exp • "+" exp
   23    | exp • "-" exp
   24    | exp • "*" exp
   25    | exp • "/" exp
   26    | exp • ">=" exp
   27    | exp • "<=" exp
   28    | exp • "<>" exp
   29    | exp • ">" exp
   30    | exp • "<" exp
   31    | exp • "&" exp
   31    | exp "&" exp •  ["end of file", "&", "class", ",", "do", "else", "end", "function", "import", "in", "method", "|", "primitive", "}", "]", ")", ";", "then", "to", "type", "var", "_chunks"]
   32    | exp • "|" exp

    "/"   shift, and go to state 60
    "="   shift, and go to state 61
    ">="  shift, and go to state 62
    ">"   shift, and go to state 63
    "<="  shift, and go to state 64
    "<"   shift, and go to state 65
    "-"   shift, and go to state 66
    "<>"  shift, and go to state 67
    "+"   shift, and go to state 69
    "*"   shift, and go to state 70

    $default  reduce using rule 31 (exp)

    Conflict between rule 31 and token "&" resolved as reduce (%left "&").
    Conflict between rule 31 and token "/" resolved as shift ("&" < "/").
    Conflict between rule 31 and token "=" resolved as shift ("&" < "=").
    Conflict between rule 31 and token ">=" resolved as shift ("&" < ">=").
    Conflict between rule 31 and token ">" resolved as shift ("&" < ">").
    Conflict between rule 31 and token "<=" resolved as shift ("&" < "<=").
    Conflict between rule 31 and token "<" resolved as shift ("&" < "<").
    Conflict between rule 31 and token "-" resolved as shift ("&" < "-").
    Conflict between rule 31 and token "<>" resolved as shift ("&" < "<>").
    Conflict between rule 31 and token "|" resolved as reduce ("|" < "&").
    Conflict between rule 31 and token "+" resolved as shift ("&" < "+").
    Conflict between rule 31 and token "*" resolved as shift ("&" < "*").


State 107

   21 exp: exp • "=" exp
   22    | exp • "+" exp
   23    | exp • "-" exp
   24    | exp • "*" exp
   25    | exp • "/" exp
   25    | exp "/" exp •  ["end of file", "&", "class", ",", "/", "do", "else", "end", "=", "function", ">=", ">", "import", "in", "<=", "<", "-", "method", "<>", "|", "+", "primitive", "}", "]", ")", ";", "then", "*", "to", "type", "var", "_chunks"]
   26    | exp • ">=" exp
   27    | exp • "<=" exp
   28    | exp • "<>" exp
   29    | exp • ">" exp
   30    | exp • "<" exp
   31    | exp • "&" exp
   32    | exp • "|" exp

    $default  reduce using rule 25 (exp)

    Conflict between rule 25 and token "&" resolved as reduce ("&" < "/").
    Conflict between rule 25 and token "/" resolved as reduce (%left "/").
    Conflict between rule 25 and token "=" resolved as reduce ("=" < "/").
    Conflict between rule 25 and token ">=" resolved as reduce (">=" < "/").
    Conflict between rule 25 and token ">" resolved as reduce (">" < "/").
    Conflict between rule 25 and token "<=" resolved as reduce ("<=" < "/").
    Conflict between rule 25 and token "<" resolved as reduce ("<" < "/").
    Conflict between rule 25 and token "-" resolved as reduce ("-" < "/").
    Conflict between rule 25 and token "<>" resolved as reduce ("<>" < "/").
    Conflict between rule 25 and token "|" resolved as reduce ("|" < "/").
    Conflict between rule 25 and token "+" resolved as reduce ("+" < "/").
    Conflict between rule 25 and token "*" resolved as reduce (%left "*").


State 108

   21 exp: exp • "=" exp
   21    | exp "=" exp •  ["end of file", "&", "class", ",", "do", "else", "end", "function", "import", "in", "method", "|", "primitive", "}", "]", ")", ";", "then", "to", "type", "var", "_chunks"]
   22    | exp • "+" exp
   23    | exp • "-" exp
   24    | exp • "*" exp
   25    | exp • "/" exp
   26    | exp • ">=" exp
   27    | exp • "<=" exp
   28    | exp • "<>" exp
   29    | exp • ">" exp
   30    | exp • "<" exp
   31    | exp • "&" exp
   32    | exp • "|" exp

    "/"  shift, and go to state 60
    "-"  shift, and go to state 66
    "+"  shift, and go to state 69
    "*"  shift, and go to state 70

    "="   error (nonassociative)
    ">="  error (nonassociative)
    ">"   error (nonassociative)
    "<="  error (nonassociative)
    "<"   error (nonassociative)
    "<>"  error (nonassociative)

    $default  reduce using rule 21 (exp)

    Conflict between rule 21 and token "&" resolved as reduce ("&" < "=").
    Conflict between rule 21 and token "/" resolved as shift ("=" < "/").
    Conflict between rule 21 and token "=" resolved as an error (%nonassoc "=").
    Conflict between rule 21 and token ">=" resolved as an error (%nonassoc ">=").
    Conflict between rule 21 and token ">" resolved as an error (%nonassoc ">").
    Conflict between rule 21 and token "<=" resolved as an error (%nonassoc "<=").
    Conflict between rule 21 and token "<" resolved as an error (%nonassoc "<").
    Conflict between rule 21 and token "-" resolved as shift ("=" < "-").
    Conflict between rule 21 and token "<>" resolved as an error (%nonassoc "<>").
    Conflict between rule 21 and token "|" resolved as reduce ("|" < "=").
    Conflict between rule 21 and token "+" resolved as shift ("=" < "+").
    Conflict between rule 21 and token "*" resolved as shift ("=" < "*").


State 109

   21 exp: exp • "=" exp
   22    | exp • "+" exp
   23    | exp • "-" exp
   24    | exp • "*" exp
   25    | exp • "/" exp
   26    | exp • ">=" exp
   26    | exp ">=" exp •  ["end of file", "&", "class", ",", "do", "else", "end", "function", "import", "in", "method", "|", "primitive", "}", "]", ")", ";", "then", "to", "type", "var", "_chunks"]
   27    | exp • "<=" exp
   28    | exp • "<>" exp
   29    | exp • ">" exp
   30    | exp • "<" exp
   31    | exp • "&" exp
   32    | exp • "|" exp

    "/"  shift, and go to state 60
    "-"  shift, and go to state 66
    "+"  shift, and go to state 69
    "*"  shift, and go to state 70

    "="   error (nonassociative)
    ">="  error (nonassociative)
    ">"   error (nonassociative)
    "<="  error (nonassociative)
    "<"   error (nonassociative)
    "<>"  error (nonassociative)

    $default  reduce using rule 26 (exp)

    Conflict between rule 26 and token "&" resolved as reduce ("&" < ">=").
    Conflict between rule 26 and token "/" resolved as shift (">=" < "/").
    Conflict between rule 26 and token "=" resolved as an error (%nonassoc "=").
    Conflict between rule 26 and token ">=" resolved as an error (%nonassoc ">=").
    Conflict between rule 26 and token ">" resolved as an error (%nonassoc ">").
    Conflict between rule 26 and token "<=" resolved as an error (%nonassoc "<=").
    Conflict between rule 26 and token "<" resolved as an error (%nonassoc "<").
    Conflict between rule 26 and token "-" resolved as shift (">=" < "-").
    Conflict between rule 26 and token "<>" resolved as an error (%nonassoc "<>").
    Conflict between rule 26 and token "|" resolved as reduce ("|" < ">=").
    Conflict between rule 26 and token "+" resolved as shift (">=" < "+").
    Conflict between rule 26 and token "*" resolved as shift (">=" < "*").


State 110

   21 exp: exp • "=" exp
   22    | exp • "+" exp
   23    | exp • "-" exp
   24    | exp • "*" exp
   25    | exp • "/" exp
   26    | exp • ">=" exp
   27    | exp • "<=" exp
   28    | exp • "<>" exp
   29    | exp • ">" exp
   29    | exp ">" exp •  ["end of file", "&", "class", ",", "do", "else", "end", "function", "import", "in", "method", "|", "primitive", "}", "]", ")", ";", "then", "to", "type", "var", "_chunks"]
   30    | exp • "<" exp
   31    | exp • "&" exp
   32    | exp • "|" exp

    "/"  shift, and go to state 60
    "-"  shift, and go to state 66
    "+"  shift, and go to state 69
    "*"  shift, and go to state 70

    "="   error (nonassociative)
    ">="  error (nonassociative)
    ">"   error (nonassociative)
    "<="  error (nonassociative)
    "<"   error (nonassociative)
    "<>"  error (nonassociative)

    $default  reduce using rule 29 (exp)

    Conflict between rule 29 and token "&" resolved as reduce ("&" < ">").
    Conflict between rule 29 and token "/" resolved as shift (">" < "/").
    Conflict between rule 29 and token "=" resolved as an error (%nonassoc "=").
    Conflict between rule 29 and token ">=" resolved as an error (%nonassoc ">=").
    Conflict between rule 29 and token ">" resolved as an error (%nonassoc ">").
    Conflict between rule 29 and token "<=" resolved as an error (%nonassoc "<=").
    Conflict between rule 29 and token "<" resolved as an error (%nonassoc "<").
    Conflict between rule 29 and token "-" resolved as shift (">" < "-").
    Conflict between rule 29 and token "<>" resolved as an error (%nonassoc "<>").
    Conflict between rule 29 and token "|" resolved as reduce ("|" < ">").
    Conflict between rule 29 and token "+" resolved as shift (">" < "+").
    Conflict between rule 29 and token "*" resolved as shift (">" < "*").


State 111

   21 exp: exp • "=" exp
   22    | exp • "+" exp
   23    | exp • "-" exp
   24    | exp • "*" exp
   25    | exp • "/" exp
   26    | exp • ">=" exp
   27    | exp • "<=" exp
   27    | exp "<=" exp •  ["end of file", "&", "class", ",", "do", "else", "end", "function", "import", "in", "method", "|", "primitive", "}", "]", ")", ";", "then", "to", "type", "var", "_chunks"]
   28    | exp • "<>" exp
   29    | exp • ">" exp
   30    | exp • "<" exp
   31    | exp • "&" exp
   32    | exp • "|" exp

    "/"  shift, and go to state 60
    "-"  shift, and go to state 66
    "+"  shift, and go to state 69
    "*"  shift, and go to state 70

    "="   error (nonassociative)
    ">="  error (nonassociative)
    ">"   error (nonassociative)
    "<="  error (nonassociative)
    "<"   error (nonassociative)
    "<>"  error (nonassociative)

    $default  reduce using rule 27 (exp)

    Conflict between rule 27 and token "&" resolved as reduce ("&" < "<=").
    Conflict between rule 27 and token "/" resolved as shift ("<=" < "/").
    Conflict between rule 27 and token "=" resolved as an error (%nonassoc "=").
    Conflict between rule 27 and token ">=" resolved as an error (%nonassoc ">=").
    Conflict between rule 27 and token ">" resolved as an error (%nonassoc ">").
    Conflict between rule 27 and token "<=" resolved as an error (%nonassoc "<=").
    Conflict between rule 27 and token "<" resolved as an error (%nonassoc "<").
    Conflict between rule 27 and token "-" resolved as shift ("<=" < "-").
    Conflict between rule 27 and token "<>" resolved as an error (%nonassoc "<>").
    Conflict between rule 27 and token "|" resolved as reduce ("|" < "<=").
    Conflict between rule 27 and token "+" resolved as shift ("<=" < "+").
    Conflict between rule 27 and token "*" resolved as shift ("<=" < "*").


State 112

   21 exp: exp • "=" exp
   22    | exp • "+" exp
   23    | exp • "-" exp
   24    | exp • "*" exp
   25    | exp • "/" exp
   26    | exp • ">=" exp
   27    | exp • "<=" exp
   28    | exp • "<>" exp
   29    | exp • ">" exp
   30    | exp • "<" exp
   30    | exp "<" exp •  ["end of file", "&", "class", ",", "do", "else", "end", "function", "import", "in", "method", "|", "primitive", "}", "]", ")", ";", "then", "to", "type", "var", "_chunks"]
   31    | exp • "&" exp
   32    | exp • "|" exp

    "/"  shift, and go to state 60
    "-"  shift, and go to state 66
    "+"  shift, and go to state 69
    "*"  shift, and go to state 70

    "="   error (nonassociative)
    ">="  error (nonassociative)
    ">"   error (nonassociative)
    "<="  error (nonassociative)
    "<"   error (nonassociative)
    "<>"  error (nonassociative)

    $default  reduce using rule 30 (exp)

    Conflict between rule 30 and token "&" resolved as reduce ("&" < "<").
    Conflict between rule 30 and token "/" resolved as shift ("<" < "/").
    Conflict between rule 30 and token "=" resolved as an error (%nonassoc "=").
    Conflict between rule 30 and token ">=" resolved as an error (%nonassoc ">=").
    Conflict between rule 30 and token ">" resolved as an error (%nonassoc ">").
    Conflict between rule 30 and token "<=" resolved as an error (%nonassoc "<=").
    Conflict between rule 30 and token "<" resolved as an error (%nonassoc "<").
    Conflict between rule 30 and token "-" resolved as shift ("<" < "-").
    Conflict between rule 30 and token "<>" resolved as an error (%nonassoc "<>").
    Conflict between rule 30 and token "|" resolved as reduce ("|" < "<").
    Conflict between rule 30 and token "+" resolved as shift ("<" < "+").
    Conflict between rule 30 and token "*" resolved as shift ("<" < "*").


State 113

   21 exp: exp • "=" exp
   22    | exp • "+" exp
   23    | exp • "-" exp
   23    | exp "-" exp •  ["end of file", "&", "class", ",", "do", "else", "end", "=", "function", ">=", ">", "import", "in", "<=", "<", "-", "method", "<>", "|", "+", "primitive", "}", "]", ")", ";", "then", "to", "type", "var", "_chunks"]
   24    | exp • "*" exp
   25    | exp • "/" exp
   26    | exp • ">=" exp
   27    | exp • "<=" exp
   28    | exp • "<>" exp
   29    | exp • ">" exp
   30    | exp • "<" exp
   31    | exp • "&" exp
   32    | exp • "|" exp

    "/"  shift, and go to state 60
    "*"  shift, and go to state 70

    $default  reduce using rule 23 (exp)

    Conflict between rule 23 and token "&" resolved as reduce ("&" < "-").
    Conflict between rule 23 and token "/" resolved as shift ("-" < "/").
    Conflict between rule 23 and token "=" resolved as reduce ("=" < "-").
    Conflict between rule 23 and token ">=" resolved as reduce (">=" < "-").
    Conflict between rule 23 and token ">" resolved as reduce (">" < "-").
    Conflict between rule 23 and token "<=" resolved as reduce ("<=" < "-").
    Conflict between rule 23 and token "<" resolved as reduce ("<" < "-").
    Conflict between rule 23 and token "-" resolved as reduce (%left "-").
    Conflict between rule 23 and token "<>" resolved as reduce ("<>" < "-").
    Conflict between rule 23 and token "|" resolved as reduce ("|" < "-").
    Conflict between rule 23 and token "+" resolved as reduce (%left "+").
    Conflict between rule 23 and token "*" resolved as shift ("-" < "*").


State 114

   21 exp: exp • "=" exp
   22    | exp • "+" exp
   23    | exp • "-" exp
   24    | exp • "*" exp
   25    | exp • "/" exp
   26    | exp • ">=" exp
   27    | exp • "<=" exp
   28    | exp • "<>" exp
   28    | exp "<>" exp •  ["end of file", "&", "class", ",", "do", "else", "end", "function", "import", "in", "method", "|", "primitive", "}", "]", ")", ";", "then", "to", "type", "var", "_chunks"]
   29    | exp • ">" exp
   30    | exp • "<" exp
   31    | exp • "&" exp
   32    | exp • "|" exp

    "/"  shift, and go to state 60
    "-"  shift, and go to state 66
    "+"  shift, and go to state 69
    "*"  shift, and go to state 70

    "="   error (nonassociative)
    ">="  error (nonassociative)
    ">"   error (nonassociative)
    "<="  error (nonassociative)
    "<"   error (nonassociative)
    "<>"  error (nonassociative)

    $default  reduce using rule 28 (exp)

    Conflict between rule 28 and token "&" resolved as reduce ("&" < "<>").
    Conflict between rule 28 and token "/" resolved as shift ("<>" < "/").
    Conflict between rule 28 and token "=" resolved as an error (%nonassoc "=").
    Conflict between rule 28 and token ">=" resolved as an error (%nonassoc ">=").
    Conflict between rule 28 and token ">" resolved as an error (%nonassoc ">").
    Conflict between rule 28 and token "<=" resolved as an error (%nonassoc "<=").
    Conflict between rule 28 and token "<" resolved as an error (%nonassoc "<").
    Conflict between rule 28 and token "-" resolved as shift ("<>" < "-").
    Conflict between rule 28 and token "<>" resolved as an error (%nonassoc "<>").
    Conflict between rule 28 and token "|" resolved as reduce ("|" < "<>").
    Conflict between rule 28 and token "+" resolved as shift ("<>" < "+").
    Conflict between rule 28 and token "*" resolved as shift ("<>" < "*").


State 115

   21 exp: exp • "=" exp
   22    | exp • "+" exp
   23    | exp • "-" exp
   24    | exp • "*" exp
   25    | exp • "/" exp
   26    | exp • ">=" exp
   27    | exp • "<=" exp
   28    | exp • "<>" exp
   29    | exp • ">" exp
   30    | exp • "<" exp
   31    | exp • "&" exp
   32    | exp • "|" exp
   32    | exp "|" exp •  ["end of file", "class", ",", "do", "else", "end", "function", "import", "in", "method", "|", "primitive", "}", "]", ")", ";", "then", "to", "type", "var", "_chunks"]

    "&"   shift, and go to state 59
    "/"   shift, and go to state 60
    "="   shift, and go to state 61
    ">="  shift, and go to state 62
    ">"   shift, and go to state 63
    "<="  shift, and go to state 64
    "<"   shift, and go to state 65
    "-"   shift, and go to state 66
    "<>"  shift, and go to state 67
    "+"   shift, and go to state 69
    "*"   shift, and go to state 70

    $default  reduce using rule 32 (exp)

    Conflict between rule 32 and token "&" resolved as shift ("|" < "&").
    Conflict between rule 32 and token "/" resolved as shift ("|" < "/").
    Conflict between rule 32 and token "=" resolved as shift ("|" < "=").
    Conflict between rule 32 and token ">=" resolved as shift ("|" < ">=").
    Conflict between rule 32 and token ">" resolved as shift ("|" < ">").
    Conflict between rule 32 and token "<=" resolved as shift ("|" < "<=").
    Conflict between rule 32 and token "<" resolved as shift ("|" < "<").
    Conflict between rule 32 and token "-" resolved as shift ("|" < "-").
    Conflict between rule 32 and token "<>" resolved as shift ("|" < "<>").
    Conflict between rule 32 and token "|" resolved as reduce (%left "|").
    Conflict between rule 32 and token "+" resolved as shift ("|" < "+").
    Conflict between rule 32 and token "*" resolved as shift ("|" < "*").


State 116

   21 exp: exp • "=" exp
   22    | exp • "+" exp
   22    | exp "+" exp •  ["end of file", "&", "class", ",", "do", "else", "end", "=", "function", ">=", ">", "import", "in", "<=", "<", "-", "method", "<>", "|", "+", "primitive", "}", "]", ")", ";", "then", "to", "type", "var", "_chunks"]
   23    | exp • "-" exp
   24    | exp • "*" exp
   25    | exp • "/" exp
   26    | exp • ">=" exp
   27    | exp • "<=" exp
   28    | exp • "<>" exp
   29    | exp • ">" exp
   30    | exp • "<" exp
   31    | exp • "&" exp
   32    | exp • "|" exp

    "/"  shift, and go to state 60
    "*"  shift, and go to state 70

    $default  reduce using rule 22 (exp)

    Conflict between rule 22 and token "&" resolved as reduce ("&" < "+").
    Conflict between rule 22 and token "/" resolved as shift ("+" < "/").
    Conflict between rule 22 and token "=" resolved as reduce ("=" < "+").
    Conflict between rule 22 and token ">=" resolved as reduce (">=" < "+").
    Conflict between rule 22 and token ">" resolved as reduce (">" < "+").
    Conflict between rule 22 and token "<=" resolved as reduce ("<=" < "+").
    Conflict between rule 22 and token "<" resolved as reduce ("<" < "+").
    Conflict between rule 22 and token "-" resolved as reduce (%left "-").
    Conflict between rule 22 and token "<>" resolved as reduce ("<>" < "+").
    Conflict between rule 22 and token "|" resolved as reduce ("|" < "+").
    Conflict between rule 22 and token "+" resolved as reduce (%left "+").
    Conflict between rule 22 and token "*" resolved as shift ("+" < "*").


State 117

   21 exp: exp • "=" exp
   22    | exp • "+" exp
   23    | exp • "-" exp
   24    | exp • "*" exp
   24    | exp "*" exp •  ["end of file", "&", "class", ",", "/", "do", "else", "end", "=", "function", ">=", ">", "import", "in", "<=", "<", "-", "method", "<>", "|", "+", "primitive", "}", "]", ")", ";", "then", "*", "to", "type", "var", "_chunks"]
   25    | exp • "/" exp
   26    | exp • ">=" exp
   27    | exp • "<=" exp
   28    | exp • "<>" exp
   29    | exp • ">" exp
   30    | exp • "<" exp
   31    | exp • "&" exp
   32    | exp • "|" exp

    $default  reduce using rule 24 (exp)

    Conflict between rule 24 and token "&" resolved as reduce ("&" < "*").
    Conflict between rule 24 and token "/" resolved as reduce (%left "/").
    Conflict between rule 24 and token "=" resolved as reduce ("=" < "*").
    Conflict between rule 24 and token ">=" resolved as reduce (">=" < "*").
    Conflict between rule 24 and token ">" resolved as reduce (">" < "*").
    Conflict between rule 24 and token "<=" resolved as reduce ("<=" < "*").
    Conflict between rule 24 and token "<" resolved as reduce ("<" < "*").
    Conflict between rule 24 and token "-" resolved as reduce ("-" < "*").
    Conflict between rule 24 and token "<>" resolved as reduce ("<>" < "*").
    Conflict between rule 24 and token "|" resolved as reduce ("|" < "*").
    Conflict between rule 24 and token "+" resolved as reduce ("+" < "*").
    Conflict between rule 24 and token "*" resolved as reduce (%left "*").


State 118

   21 exp: exp • "=" exp
   22    | exp • "+" exp
   23    | exp • "-" exp
   24    | exp • "*" exp
   25    | exp • "/" exp
   26    | exp • ">=" exp
   27    | exp • "<=" exp
   28    | exp • "<>" exp
   29    | exp • ">" exp
   30    | exp • "<" exp
   31    | exp • "&" exp
   32    | exp • "|" exp
   34    | lvalue ":=" exp •  ["end of file", "class", ",", "do", "else", "end", "function", "import", "in", "method", "primitive", "}", "]", ")", ";", "then", "to", "type", "var", "_chunks"]

    "&"   shift, and go to state 59
    "/"   shift, and go to state 60
    "="   shift, and go to state 61
    ">="  shift, and go to state 62
    ">"   shift, and go to state 63
    "<="  shift, and go to state 64
    "<"   shift, and go to state 65
    "-"   shift, and go to state 66
    "<>"  shift, and go to state 67
    "|"   shift, and go to state 68
    "+"   shift, and go to state 69
    "*"   shift, and go to state 70

    $default  reduce using rule 34 (exp)

    Conflict between rule 34 and token "&" resolved as shift (":=" < "&").
    Conflict between rule 34 and token "/" resolved as shift (":=" < "/").
    Conflict between rule 34 and token "=" resolved as shift (":=" < "=").
    Conflict between rule 34 and token ">=" resolved as shift (":=" < ">=").
    Conflict between rule 34 and token ">" resolved as shift (":=" < ">").
    Conflict between rule 34 and token "<=" resolved as shift (":=" < "<=").
    Conflict between rule 34 and token "<" resolved as shift (":=" < "<").
    Conflict between rule 34 and token "-" resolved as shift (":=" < "-").
    Conflict between rule 34 and token "<>" resolved as shift (":=" < "<>").
    Conflict between rule 34 and token "|" resolved as shift (":=" < "|").
    Conflict between rule 34 and token "+" resolved as shift (":=" < "+").
    Conflict between rule 34 and token "*" resolved as shift (":=" < "*").


State 119

   42 exp: lvalue "." "identifier" • "(" funcall ")"
   46 lvalue: lvalue "." "identifier" •  ["end of file", "&", ":=", "class", ",", "/", "do", ".", "else", "end", "=", "function", ">=", ">", "import", "in", "[", "<=", "<", "-", "method", "<>", "|", "+", "primitive", "}", "]", ")", ";", "then", "*", "to", "type", "var", "_chunks"]

    "("  shift, and go to state 155

    $default  reduce using rule 46 (lvalue)


State 120

   21 exp: exp • "=" exp
   22    | exp • "+" exp
   23    | exp • "-" exp
   24    | exp • "*" exp
   25    | exp • "/" exp
   26    | exp • ">=" exp
   27    | exp • "<=" exp
   28    | exp • "<>" exp
   29    | exp • ">" exp
   30    | exp • "<" exp
   31    | exp • "&" exp
   32    | exp • "|" exp
   47 lvalue: lvalue "[" exp • "]"

    "&"   shift, and go to state 59
    "/"   shift, and go to state 60
    "="   shift, and go to state 61
    ">="  shift, and go to state 62
    ">"   shift, and go to state 63
    "<="  shift, and go to state 64
    "<"   shift, and go to state 65
    "-"   shift, and go to state 66
    "<>"  shift, and go to state 67
    "|"   shift, and go to state 68
    "+"   shift, and go to state 69
    "]"   shift, and go to state 156
    "*"   shift, and go to state 70


State 121

   12 rec.2: "identifier" "=" • exp
   13 exp: • "integer"
   14    | • "nil"
   15    | • "string"
   16    | • "identifier" "[" exp "]" "of" exp
   17    | • "identifier" "{" rec "}"
   18    | • lvalue
   19    | • "identifier" "(" funcall ")"
   20    | • "-" exp
   21    | • exp "=" exp
   22    | • exp "+" exp
   23    | • exp "-" exp
   24    | • exp "*" exp
   25    | • exp "/" exp
   26    | • exp ">=" exp
   27    | • exp "<=" exp
   28    | • exp "<>" exp
   29    | • exp ">" exp
   30    | • exp "<" exp
   31    | • exp "&" exp
   32    | • exp "|" exp
   33    | • "(" exps ")"
   34    | • lvalue ":=" exp
   35    | • "if" exp "then" exp "else" exp
   36    | • "if" exp "then" exp
   37    | • "while" exp "do" exp
   38    | • "for" "identifier" ":=" exp "to" exp "do" exp
   39    | • "break"
   40    | • "let" chunks "in" exps "end"
   41    | • "new" typeid
   42    | • lvalue "." "identifier" "(" funcall ")"
   43    | • "_cast" "(" exp "," ty ")"
   44    | • "_exp" "(" "integer" ")"
   45 lvalue: • "identifier"
   46       | • lvalue "." "identifier"
   47       | • lvalue "[" exp "]"
   48       | • "_lvalue" "(" "integer" ")"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "_cast"       shift, and go to state 5
    "for"         shift, and go to state 7
    "if"          shift, and go to state 9
    "let"         shift, and go to state 11
    "("           shift, and go to state 12
    "-"           shift, and go to state 13
    "new"         shift, and go to state 14
    "nil"         shift, and go to state 15
    "while"       shift, and go to state 19
    "_exp"        shift, and go to state 20
    "_lvalue"     shift, and go to state 21

    exp     go to state 157
    lvalue  go to state 25


State 122

   17 exp: "identifier" "{" rec "}" •

    $default  reduce using rule 17 (exp)


State 123

   10 rec.1: rec.1 "," • rec.2
   12 rec.2: • "identifier" "=" exp

    "identifier"  shift, and go to state 79

    rec.2  go to state 158


State 124

   16 exp: "identifier" "[" exp "]" • "of" exp

    "of"  shift, and go to state 159


State 125

   19 exp: "identifier" "(" funcall ")" •

    $default  reduce using rule 19 (exp)


State 126

   13 exp: • "integer"
   14    | • "nil"
   15    | • "string"
   16    | • "identifier" "[" exp "]" "of" exp
   17    | • "identifier" "{" rec "}"
   18    | • lvalue
   19    | • "identifier" "(" funcall ")"
   20    | • "-" exp
   21    | • exp "=" exp
   22    | • exp "+" exp
   23    | • exp "-" exp
   24    | • exp "*" exp
   25    | • exp "/" exp
   26    | • exp ">=" exp
   27    | • exp "<=" exp
   28    | • exp "<>" exp
   29    | • exp ">" exp
   30    | • exp "<" exp
   31    | • exp "&" exp
   32    | • exp "|" exp
   33    | • "(" exps ")"
   34    | • lvalue ":=" exp
   35    | • "if" exp "then" exp "else" exp
   36    | • "if" exp "then" exp
   37    | • "while" exp "do" exp
   38    | • "for" "identifier" ":=" exp "to" exp "do" exp
   39    | • "break"
   40    | • "let" chunks "in" exps "end"
   41    | • "new" typeid
   42    | • lvalue "." "identifier" "(" funcall ")"
   43    | • "_cast" "(" exp "," ty ")"
   44    | • "_exp" "(" "integer" ")"
   45 lvalue: • "identifier"
   46       | • lvalue "." "identifier"
   47       | • lvalue "[" exp "]"
   48       | • "_lvalue" "(" "integer" ")"
   51 funcall.1: funcall.1 "," • funcall.2
   53 funcall.2: • exp

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "_cast"       shift, and go to state 5
    "for"         shift, and go to state 7
    "if"          shift, and go to state 9
    "let"         shift, and go to state 11
    "("           shift, and go to state 12
    "-"           shift, and go to state 13
    "new"         shift, and go to state 14
    "nil"         shift, and go to state 15
    "while"       shift, and go to state 19
    "_exp"        shift, and go to state 20
    "_lvalue"     shift, and go to state 21

    exp        go to state 84
    lvalue     go to state 25
    funcall.2  go to state 160


State 127

   43 exp: "_cast" "(" exp "," • ty ")"
   74 ty: • typeid
   75   | • "{" tyfields "}"
   76   | • "array" "of" typeid
   77   | • "class" "extends" typeid "{" classfields "}"
   78   | • "class" "{" classfields "}"
   96 typeid: • "identifier"
   97       | • "_namety" "(" "integer" ")"

    "identifier"  shift, and go to state 48
    "array"       shift, and go to state 144
    "class"       shift, and go to state 145
    "{"           shift, and go to state 146
    "_namety"     shift, and go to state 49

    ty      go to state 161
    typeid  go to state 148


State 128

   72 tydec: "class" "identifier" "extends" typeid • "{" classfields "}"

    "{"  shift, and go to state 162


State 129

   94 methdec: "method" • "identifier" "(" tyvarchunks ")" "=" exp
   95        | "method" • "identifier" "(" tyvarchunks ")" ":" typeid "=" exp

    "identifier"  shift, and go to state 163


State 130

   66 varchunk: • vardec
   67 vardec: • "var" "identifier" ":=" exp
   68       | • "var" "identifier" ":" typeid ":=" exp
   89 classfields: ε •  ["}"]
   90            | • varchunk classfields
   90            | varchunk • classfields
   91            | • methchunk classfields
   92 methchunk: • methdec
   93          | • methdec methchunk
   94 methdec: • "method" "identifier" "(" tyvarchunks ")" "=" exp
   95        | • "method" "identifier" "(" tyvarchunks ")" ":" typeid "=" exp

    "method"  shift, and go to state 129
    "var"     shift, and go to state 18

    $default  reduce using rule 89 (classfields)

    varchunk     go to state 130
    vardec       go to state 30
    classfields  go to state 164
    methchunk    go to state 132
    methdec      go to state 133


State 131

   73 tydec: "class" "identifier" "{" classfields • "}"

    "}"  shift, and go to state 165


State 132

   66 varchunk: • vardec
   67 vardec: • "var" "identifier" ":=" exp
   68       | • "var" "identifier" ":" typeid ":=" exp
   89 classfields: ε •  ["}"]
   90            | • varchunk classfields
   91            | • methchunk classfields
   91            | methchunk • classfields
   92 methchunk: • methdec
   93          | • methdec methchunk
   94 methdec: • "method" "identifier" "(" tyvarchunks ")" "=" exp
   95        | • "method" "identifier" "(" tyvarchunks ")" ":" typeid "=" exp

    "method"  shift, and go to state 129
    "var"     shift, and go to state 18

    $default  reduce using rule 89 (classfields)

    varchunk     go to state 130
    vardec       go to state 30
    classfields  go to state 166
    methchunk    go to state 132
    methdec      go to state 133


State 133

   92 methchunk: • methdec
   92          | methdec •  ["}", "var"]
   93          | • methdec methchunk
   93          | methdec • methchunk
   94 methdec: • "method" "identifier" "(" tyvarchunks ")" "=" exp
   95        | • "method" "identifier" "(" tyvarchunks ")" ":" typeid "=" exp

    "method"  shift, and go to state 129

    $default  reduce using rule 92 (methchunk)

    methchunk  go to state 167
    methdec    go to state 133

    Conflict between rule 92 and token "method" resolved as shift ("_chunks" < "method").


State 134

   21 exp: exp • "=" exp
   22    | exp • "+" exp
   23    | exp • "-" exp
   24    | exp • "*" exp
   25    | exp • "/" exp
   26    | exp • ">=" exp
   27    | exp • "<=" exp
   28    | exp • "<>" exp
   29    | exp • ">" exp
   30    | exp • "<" exp
   31    | exp • "&" exp
   32    | exp • "|" exp
   38    | "for" "identifier" ":=" exp • "to" exp "do" exp

    "&"   shift, and go to state 59
    "/"   shift, and go to state 60
    "="   shift, and go to state 61
    ">="  shift, and go to state 62
    ">"   shift, and go to state 63
    "<="  shift, and go to state 64
    "<"   shift, and go to state 65
    "-"   shift, and go to state 66
    "<>"  shift, and go to state 67
    "|"   shift, and go to state 68
    "+"   shift, and go to state 69
    "*"   shift, and go to state 70
    "to"  shift, and go to state 168


State 135

   88 tyvardec: "identifier" • ":" typeid

    ":"  shift, and go to state 169


State 136

   62 fundec: "function" "identifier" "(" tyvarchunks • ")" "=" exp
   63       | "function" "identifier" "(" tyvarchunks • ")" ":" typeid "=" exp

    ")"  shift, and go to state 170


State 137

   85 tyvarchunks: tyvarchunks.1 •  [")"]
   86 tyvarchunks.1: tyvarchunks.1 • "," tyvardec

    ","  shift, and go to state 171

    $default  reduce using rule 85 (tyvarchunks)


State 138

   87 tyvarchunks.1: tyvardec •

    $default  reduce using rule 87 (tyvarchunks.1)


State 139

   21 exp: exp • "=" exp
   22    | exp • "+" exp
   23    | exp • "-" exp
   24    | exp • "*" exp
   25    | exp • "/" exp
   26    | exp • ">=" exp
   27    | exp • "<=" exp
   28    | exp • "<>" exp
   29    | exp • ">" exp
   30    | exp • "<" exp
   31    | exp • "&" exp
   32    | exp • "|" exp
   35    | "if" exp "then" exp • "else" exp
   36    | "if" exp "then" exp •  ["end of file", "class", ",", "do", "end", "function", "import", "in", "method", "primitive", "}", "]", ")", ";", "then", "to", "type", "var", "_chunks"]

    "&"     shift, and go to state 59
    "/"     shift, and go to state 60
    "else"  shift, and go to state 172
    "="     shift, and go to state 61
    ">="    shift, and go to state 62
    ">"     shift, and go to state 63
    "<="    shift, and go to state 64
    "<"     shift, and go to state 65
    "-"     shift, and go to state 66
    "<>"    shift, and go to state 67
    "|"     shift, and go to state 68
    "+"     shift, and go to state 69
    "*"     shift, and go to state 70

    $default  reduce using rule 36 (exp)

    Conflict between rule 36 and token "&" resolved as shift ("then" < "&").
    Conflict between rule 36 and token "/" resolved as shift ("then" < "/").
    Conflict between rule 36 and token "else" resolved as shift ("then" < "else").
    Conflict between rule 36 and token "=" resolved as shift ("then" < "=").
    Conflict between rule 36 and token ">=" resolved as shift ("then" < ">=").
    Conflict between rule 36 and token ">" resolved as shift ("then" < ">").
    Conflict between rule 36 and token "<=" resolved as shift ("then" < "<=").
    Conflict between rule 36 and token "<" resolved as shift ("then" < "<").
    Conflict between rule 36 and token "-" resolved as shift ("then" < "-").
    Conflict between rule 36 and token "<>" resolved as shift ("then" < "<>").
    Conflict between rule 36 and token "|" resolved as shift ("then" < "|").
    Conflict between rule 36 and token "+" resolved as shift ("then" < "+").
    Conflict between rule 36 and token "*" resolved as shift ("then" < "*").


State 140

   40 exp: "let" chunks "in" exps • "end"

    "end"  shift, and go to state 173


State 141

    5 exps.1: exps.1 ";" exps.2 •

    $default  reduce using rule 5 (exps.1)


State 142

   97 typeid: "_namety" "(" "integer" • ")"

    ")"  shift, and go to state 174


State 143

   64 fundec: "primitive" "identifier" "(" tyvarchunks • ")"
   65       | "primitive" "identifier" "(" tyvarchunks • ")" ":" typeid

    ")"  shift, and go to state 175


State 144

   76 ty: "array" • "of" typeid

    "of"  shift, and go to state 176


State 145

   77 ty: "class" • "extends" typeid "{" classfields "}"
   78   | "class" • "{" classfields "}"

    "extends"  shift, and go to state 177
    "{"        shift, and go to state 178


State 146

   75 ty: "{" • tyfields "}"
   79 tyfields: ε •  ["}"]
   80         | • tyfields.1
   81 tyfields.1: • tyfields.1 "," tyfield
   82           | • tyfield
   83 tyfield: • "identifier" ":" typeid

    "identifier"  shift, and go to state 179

    $default  reduce using rule 79 (tyfields)

    tyfields    go to state 180
    tyfields.1  go to state 181
    tyfield     go to state 182


State 147

   71 tydec: "type" "identifier" "=" ty •

    $default  reduce using rule 71 (tydec)


State 148

   74 ty: typeid •

    $default  reduce using rule 74 (ty)


State 149

   21 exp: exp • "=" exp
   22    | exp • "+" exp
   23    | exp • "-" exp
   24    | exp • "*" exp
   25    | exp • "/" exp
   26    | exp • ">=" exp
   27    | exp • "<=" exp
   28    | exp • "<>" exp
   29    | exp • ">" exp
   30    | exp • "<" exp
   31    | exp • "&" exp
   32    | exp • "|" exp
   67 vardec: "var" "identifier" ":=" exp •  ["end of file", "class", "function", "import", "in", "method", "primitive", "}", "type", "var", "_chunks"]

    "&"   shift, and go to state 59
    "/"   shift, and go to state 60
    "="   shift, and go to state 61
    ">="  shift, and go to state 62
    ">"   shift, and go to state 63
    "<="  shift, and go to state 64
    "<"   shift, and go to state 65
    "-"   shift, and go to state 66
    "<>"  shift, and go to state 67
    "|"   shift, and go to state 68
    "+"   shift, and go to state 69
    "*"   shift, and go to state 70

    $default  reduce using rule 67 (vardec)


State 150

   68 vardec: "var" "identifier" ":" typeid • ":=" exp

    ":="  shift, and go to state 183


State 151

   21 exp: exp • "=" exp
   22    | exp • "+" exp
   23    | exp • "-" exp
   24    | exp • "*" exp
   25    | exp • "/" exp
   26    | exp • ">=" exp
   27    | exp • "<=" exp
   28    | exp • "<>" exp
   29    | exp • ">" exp
   30    | exp • "<" exp
   31    | exp • "&" exp
   32    | exp • "|" exp
   37    | "while" exp "do" exp •  ["end of file", "class", ",", "do", "else", "end", "function", "import", "in", "method", "primitive", "}", "]", ")", ";", "then", "to", "type", "var", "_chunks"]

    "&"   shift, and go to state 59
    "/"   shift, and go to state 60
    "="   shift, and go to state 61
    ">="  shift, and go to state 62
    ">"   shift, and go to state 63
    "<="  shift, and go to state 64
    "<"   shift, and go to state 65
    "-"   shift, and go to state 66
    "<>"  shift, and go to state 67
    "|"   shift, and go to state 68
    "+"   shift, and go to state 69
    "*"   shift, and go to state 70

    $default  reduce using rule 37 (exp)

    Conflict between rule 37 and token "&" resolved as shift ("do" < "&").
    Conflict between rule 37 and token "/" resolved as shift ("do" < "/").
    Conflict between rule 37 and token "=" resolved as shift ("do" < "=").
    Conflict between rule 37 and token ">=" resolved as shift ("do" < ">=").
    Conflict between rule 37 and token ">" resolved as shift ("do" < ">").
    Conflict between rule 37 and token "<=" resolved as shift ("do" < "<=").
    Conflict between rule 37 and token "<" resolved as shift ("do" < "<").
    Conflict between rule 37 and token "-" resolved as shift ("do" < "-").
    Conflict between rule 37 and token "<>" resolved as shift ("do" < "<>").
    Conflict between rule 37 and token "|" resolved as shift ("do" < "|").
    Conflict between rule 37 and token "+" resolved as shift ("do" < "+").
    Conflict between rule 37 and token "*" resolved as shift ("do" < "*").


State 152

   44 exp: "_exp" "(" "integer" ")" •

    $default  reduce using rule 44 (exp)


State 153

   48 lvalue: "_lvalue" "(" "integer" ")" •

    $default  reduce using rule 48 (lvalue)


State 154

   54 chunks: ε •  ["end of file", "in"]
   55       | • tychunk chunks
   56       | • funchunk chunks
   57       | • varchunk chunks
   58       | • "import" "string"
   59       | • "_chunks" "(" "integer" ")" chunks
   59       | "_chunks" "(" "integer" ")" • chunks
   60 funchunk: • fundec
   61         | • fundec funchunk
   62 fundec: • "function" "identifier" "(" tyvarchunks ")" "=" exp
   63       | • "function" "identifier" "(" tyvarchunks ")" ":" typeid "=" exp
   64       | • "primitive" "identifier" "(" tyvarchunks ")"
   65       | • "primitive" "identifier" "(" tyvarchunks ")" ":" typeid
   66 varchunk: • vardec
   67 vardec: • "var" "identifier" ":=" exp
   68       | • "var" "identifier" ":" typeid ":=" exp
   69 tychunk: • tydec
   70        | • tydec tychunk
   71 tydec: • "type" "identifier" "=" ty
   72      | • "class" "identifier" "extends" typeid "{" classfields "}"
   73      | • "class" "identifier" "{" classfields "}"

    "class"      shift, and go to state 6
    "function"   shift, and go to state 8
    "import"     shift, and go to state 10
    "primitive"  shift, and go to state 16
    "type"       shift, and go to state 17
    "var"        shift, and go to state 18
    "_chunks"    shift, and go to state 22

    $default  reduce using rule 54 (chunks)

    chunks    go to state 184
    funchunk  go to state 27
    fundec    go to state 28
    varchunk  go to state 29
    vardec    go to state 30
    tychunk   go to state 31
    tydec     go to state 32


State 155

   13 exp: • "integer"
   14    | • "nil"
   15    | • "string"
   16    | • "identifier" "[" exp "]" "of" exp
   17    | • "identifier" "{" rec "}"
   18    | • lvalue
   19    | • "identifier" "(" funcall ")"
   20    | • "-" exp
   21    | • exp "=" exp
   22    | • exp "+" exp
   23    | • exp "-" exp
   24    | • exp "*" exp
   25    | • exp "/" exp
   26    | • exp ">=" exp
   27    | • exp "<=" exp
   28    | • exp "<>" exp
   29    | • exp ">" exp
   30    | • exp "<" exp
   31    | • exp "&" exp
   32    | • exp "|" exp
   33    | • "(" exps ")"
   34    | • lvalue ":=" exp
   35    | • "if" exp "then" exp "else" exp
   36    | • "if" exp "then" exp
   37    | • "while" exp "do" exp
   38    | • "for" "identifier" ":=" exp "to" exp "do" exp
   39    | • "break"
   40    | • "let" chunks "in" exps "end"
   41    | • "new" typeid
   42    | • lvalue "." "identifier" "(" funcall ")"
   42    | lvalue "." "identifier" "(" • funcall ")"
   43    | • "_cast" "(" exp "," ty ")"
   44    | • "_exp" "(" "integer" ")"
   45 lvalue: • "identifier"
   46       | • lvalue "." "identifier"
   47       | • lvalue "[" exp "]"
   48       | • "_lvalue" "(" "integer" ")"
   49 funcall: ε •  [")"]
   50        | • funcall.1
   51 funcall.1: • funcall.1 "," funcall.2
   52          | • funcall.2
   53 funcall.2: • exp

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "_cast"       shift, and go to state 5
    "for"         shift, and go to state 7
    "if"          shift, and go to state 9
    "let"         shift, and go to state 11
    "("           shift, and go to state 12
    "-"           shift, and go to state 13
    "new"         shift, and go to state 14
    "nil"         shift, and go to state 15
    "while"       shift, and go to state 19
    "_exp"        shift, and go to state 20
    "_lvalue"     shift, and go to state 21

    $default  reduce using rule 49 (funcall)

    exp        go to state 84
    lvalue     go to state 25
    funcall    go to state 185
    funcall.1  go to state 86
    funcall.2  go to state 87


State 156

   47 lvalue: lvalue "[" exp "]" •

    $default  reduce using rule 47 (lvalue)


State 157

   12 rec.2: "identifier" "=" exp •  [",", "}"]
   21 exp: exp • "=" exp
   22    | exp • "+" exp
   23    | exp • "-" exp
   24    | exp • "*" exp
   25    | exp • "/" exp
   26    | exp • ">=" exp
   27    | exp • "<=" exp
   28    | exp • "<>" exp
   29    | exp • ">" exp
   30    | exp • "<" exp
   31    | exp • "&" exp
   32    | exp • "|" exp

    "&"   shift, and go to state 59
    "/"   shift, and go to state 60
    "="   shift, and go to state 61
    ">="  shift, and go to state 62
    ">"   shift, and go to state 63
    "<="  shift, and go to state 64
    "<"   shift, and go to state 65
    "-"   shift, and go to state 66
    "<>"  shift, and go to state 67
    "|"   shift, and go to state 68
    "+"   shift, and go to state 69
    "*"   shift, and go to state 70

    $default  reduce using rule 12 (rec.2)


State 158

   10 rec.1: rec.1 "," rec.2 •

    $default  reduce using rule 10 (rec.1)


State 159

   13 exp: • "integer"
   14    | • "nil"
   15    | • "string"
   16    | • "identifier" "[" exp "]" "of" exp
   16    | "identifier" "[" exp "]" "of" • exp
   17    | • "identifier" "{" rec "}"
   18    | • lvalue
   19    | • "identifier" "(" funcall ")"
   20    | • "-" exp
   21    | • exp "=" exp
   22    | • exp "+" exp
   23    | • exp "-" exp
   24    | • exp "*" exp
   25    | • exp "/" exp
   26    | • exp ">=" exp
   27    | • exp "<=" exp
   28    | • exp "<>" exp
   29    | • exp ">" exp
   30    | • exp "<" exp
   31    | • exp "&" exp
   32    | • exp "|" exp
   33    | • "(" exps ")"
   34    | • lvalue ":=" exp
   35    | • "if" exp "then" exp "else" exp
   36    | • "if" exp "then" exp
   37    | • "while" exp "do" exp
   38    | • "for" "identifier" ":=" exp "to" exp "do" exp
   39    | • "break"
   40    | • "let" chunks "in" exps "end"
   41    | • "new" typeid
   42    | • lvalue "." "identifier" "(" funcall ")"
   43    | • "_cast" "(" exp "," ty ")"
   44    | • "_exp" "(" "integer" ")"
   45 lvalue: • "identifier"
   46       | • lvalue "." "identifier"
   47       | • lvalue "[" exp "]"
   48       | • "_lvalue" "(" "integer" ")"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "_cast"       shift, and go to state 5
    "for"         shift, and go to state 7
    "if"          shift, and go to state 9
    "let"         shift, and go to state 11
    "("           shift, and go to state 12
    "-"           shift, and go to state 13
    "new"         shift, and go to state 14
    "nil"         shift, and go to state 15
    "while"       shift, and go to state 19
    "_exp"        shift, and go to state 20
    "_lvalue"     shift, and go to state 21

    exp     go to state 186
    lvalue  go to state 25


State 160

   51 funcall.1: funcall.1 "," funcall.2 •

    $default  reduce using rule 51 (funcall.1)


State 161

   43 exp: "_cast" "(" exp "," ty • ")"

    ")"  shift, and go to state 187


State 162

   66 varchunk: • vardec
   67 vardec: • "var" "identifier" ":=" exp
   68       | • "var" "identifier" ":" typeid ":=" exp
   72 tydec: "class" "identifier" "extends" typeid "{" • classfields "}"
   89 classfields: ε •  ["}"]
   90            | • varchunk classfields
   91            | • methchunk classfields
   92 methchunk: • methdec
   93          | • methdec methchunk
   94 methdec: • "method" "identifier" "(" tyvarchunks ")" "=" exp
   95        | • "method" "identifier" "(" tyvarchunks ")" ":" typeid "=" exp

    "method"  shift, and go to state 129
    "var"     shift, and go to state 18

    $default  reduce using rule 89 (classfields)

    varchunk     go to state 130
    vardec       go to state 30
    classfields  go to state 188
    methchunk    go to state 132
    methdec      go to state 133


State 163

   94 methdec: "method" "identifier" • "(" tyvarchunks ")" "=" exp
   95        | "method" "identifier" • "(" tyvarchunks ")" ":" typeid "=" exp

    "("  shift, and go to state 189


State 164

   90 classfields: varchunk classfields •

    $default  reduce using rule 90 (classfields)


State 165

   73 tydec: "class" "identifier" "{" classfields "}" •

    $default  reduce using rule 73 (tydec)


State 166

   91 classfields: methchunk classfields •

    $default  reduce using rule 91 (classfields)


State 167

   93 methchunk: methdec methchunk •

    $default  reduce using rule 93 (methchunk)


State 168

   13 exp: • "integer"
   14    | • "nil"
   15    | • "string"
   16    | • "identifier" "[" exp "]" "of" exp
   17    | • "identifier" "{" rec "}"
   18    | • lvalue
   19    | • "identifier" "(" funcall ")"
   20    | • "-" exp
   21    | • exp "=" exp
   22    | • exp "+" exp
   23    | • exp "-" exp
   24    | • exp "*" exp
   25    | • exp "/" exp
   26    | • exp ">=" exp
   27    | • exp "<=" exp
   28    | • exp "<>" exp
   29    | • exp ">" exp
   30    | • exp "<" exp
   31    | • exp "&" exp
   32    | • exp "|" exp
   33    | • "(" exps ")"
   34    | • lvalue ":=" exp
   35    | • "if" exp "then" exp "else" exp
   36    | • "if" exp "then" exp
   37    | • "while" exp "do" exp
   38    | • "for" "identifier" ":=" exp "to" exp "do" exp
   38    | "for" "identifier" ":=" exp "to" • exp "do" exp
   39    | • "break"
   40    | • "let" chunks "in" exps "end"
   41    | • "new" typeid
   42    | • lvalue "." "identifier" "(" funcall ")"
   43    | • "_cast" "(" exp "," ty ")"
   44    | • "_exp" "(" "integer" ")"
   45 lvalue: • "identifier"
   46       | • lvalue "." "identifier"
   47       | • lvalue "[" exp "]"
   48       | • "_lvalue" "(" "integer" ")"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "_cast"       shift, and go to state 5
    "for"         shift, and go to state 7
    "if"          shift, and go to state 9
    "let"         shift, and go to state 11
    "("           shift, and go to state 12
    "-"           shift, and go to state 13
    "new"         shift, and go to state 14
    "nil"         shift, and go to state 15
    "while"       shift, and go to state 19
    "_exp"        shift, and go to state 20
    "_lvalue"     shift, and go to state 21

    exp     go to state 190
    lvalue  go to state 25


State 169

   88 tyvardec: "identifier" ":" • typeid
   96 typeid: • "identifier"
   97       | • "_namety" "(" "integer" ")"

    "identifier"  shift, and go to state 48
    "_namety"     shift, and go to state 49

    typeid  go to state 191


State 170

   62 fundec: "function" "identifier" "(" tyvarchunks ")" • "=" exp
   63       | "function" "identifier" "(" tyvarchunks ")" • ":" typeid "=" exp

    ":"  shift, and go to state 192
    "="  shift, and go to state 193


State 171

   86 tyvarchunks.1: tyvarchunks.1 "," • tyvardec
   88 tyvardec: • "identifier" ":" typeid

    "identifier"  shift, and go to state 135

    tyvardec  go to state 194


State 172

   13 exp: • "integer"
   14    | • "nil"
   15    | • "string"
   16    | • "identifier" "[" exp "]" "of" exp
   17    | • "identifier" "{" rec "}"
   18    | • lvalue
   19    | • "identifier" "(" funcall ")"
   20    | • "-" exp
   21    | • exp "=" exp
   22    | • exp "+" exp
   23    | • exp "-" exp
   24    | • exp "*" exp
   25    | • exp "/" exp
   26    | • exp ">=" exp
   27    | • exp "<=" exp
   28    | • exp "<>" exp
   29    | • exp ">" exp
   30    | • exp "<" exp
   31    | • exp "&" exp
   32    | • exp "|" exp
   33    | • "(" exps ")"
   34    | • lvalue ":=" exp
   35    | • "if" exp "then" exp "else" exp
   35    | "if" exp "then" exp "else" • exp
   36    | • "if" exp "then" exp
   37    | • "while" exp "do" exp
   38    | • "for" "identifier" ":=" exp "to" exp "do" exp
   39    | • "break"
   40    | • "let" chunks "in" exps "end"
   41    | • "new" typeid
   42    | • lvalue "." "identifier" "(" funcall ")"
   43    | • "_cast" "(" exp "," ty ")"
   44    | • "_exp" "(" "integer" ")"
   45 lvalue: • "identifier"
   46       | • lvalue "." "identifier"
   47       | • lvalue "[" exp "]"
   48       | • "_lvalue" "(" "integer" ")"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "_cast"       shift, and go to state 5
    "for"         shift, and go to state 7
    "if"          shift, and go to state 9
    "let"         shift, and go to state 11
    "("           shift, and go to state 12
    "-"           shift, and go to state 13
    "new"         shift, and go to state 14
    "nil"         shift, and go to state 15
    "while"       shift, and go to state 19
    "_exp"        shift, and go to state 20
    "_lvalue"     shift, and go to state 21

    exp     go to state 195
    lvalue  go to state 25


State 173

   40 exp: "let" chunks "in" exps "end" •

    $default  reduce using rule 40 (exp)


State 174

   97 typeid: "_namety" "(" "integer" ")" •

    $default  reduce using rule 97 (typeid)


State 175

   64 fundec: "primitive" "identifier" "(" tyvarchunks ")" •  ["end of file", "class", "function", "import", "in", "primitive", "type", "var", "_chunks"]
   65       | "primitive" "identifier" "(" tyvarchunks ")" • ":" typeid

    ":"  shift, and go to state 196

    $default  reduce using rule 64 (fundec)


State 176

   76 ty: "array" "of" • typeid
   96 typeid: • "identifier"
   97       | • "_namety" "(" "integer" ")"

    "identifier"  shift, and go to state 48
    "_namety"     shift, and go to state 49

    typeid  go to state 197


State 177

   77 ty: "class" "extends" • typeid "{" classfields "}"
   96 typeid: • "identifier"
   97       | • "_namety" "(" "integer" ")"

    "identifier"  shift, and go to state 48
    "_namety"     shift, and go to state 49

    typeid  go to state 198


State 178

   66 varchunk: • vardec
   67 vardec: • "var" "identifier" ":=" exp
   68       | • "var" "identifier" ":" typeid ":=" exp
   78 ty: "class" "{" • classfields "}"
   89 classfields: ε •  ["}"]
   90            | • varchunk classfields
   91            | • methchunk classfields
   92 methchunk: • methdec
   93          | • methdec methchunk
   94 methdec: • "method" "identifier" "(" tyvarchunks ")" "=" exp
   95        | • "method" "identifier" "(" tyvarchunks ")" ":" typeid "=" exp

    "method"  shift, and go to state 129
    "var"     shift, and go to state 18

    $default  reduce using rule 89 (classfields)

    varchunk     go to state 130
    vardec       go to state 30
    classfields  go to state 199
    methchunk    go to state 132
    methdec      go to state 133


State 179

   83 tyfield: "identifier" • ":" typeid

    ":"  shift, and go to state 200


State 180

   75 ty: "{" tyfields • "}"

    "}"  shift, and go to state 201


State 181

   80 tyfields: tyfields.1 •  ["}"]
   81 tyfields.1: tyfields.1 • "," tyfield

    ","  shift, and go to state 202

    $default  reduce using rule 80 (tyfields)


State 182

   82 tyfields.1: tyfield •

    $default  reduce using rule 82 (tyfields.1)


State 183

   13 exp: • "integer"
   14    | • "nil"
   15    | • "string"
   16    | • "identifier" "[" exp "]" "of" exp
   17    | • "identifier" "{" rec "}"
   18    | • lvalue
   19    | • "identifier" "(" funcall ")"
   20    | • "-" exp
   21    | • exp "=" exp
   22    | • exp "+" exp
   23    | • exp "-" exp
   24    | • exp "*" exp
   25    | • exp "/" exp
   26    | • exp ">=" exp
   27    | • exp "<=" exp
   28    | • exp "<>" exp
   29    | • exp ">" exp
   30    | • exp "<" exp
   31    | • exp "&" exp
   32    | • exp "|" exp
   33    | • "(" exps ")"
   34    | • lvalue ":=" exp
   35    | • "if" exp "then" exp "else" exp
   36    | • "if" exp "then" exp
   37    | • "while" exp "do" exp
   38    | • "for" "identifier" ":=" exp "to" exp "do" exp
   39    | • "break"
   40    | • "let" chunks "in" exps "end"
   41    | • "new" typeid
   42    | • lvalue "." "identifier" "(" funcall ")"
   43    | • "_cast" "(" exp "," ty ")"
   44    | • "_exp" "(" "integer" ")"
   45 lvalue: • "identifier"
   46       | • lvalue "." "identifier"
   47       | • lvalue "[" exp "]"
   48       | • "_lvalue" "(" "integer" ")"
   68 vardec: "var" "identifier" ":" typeid ":=" • exp

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "_cast"       shift, and go to state 5
    "for"         shift, and go to state 7
    "if"          shift, and go to state 9
    "let"         shift, and go to state 11
    "("           shift, and go to state 12
    "-"           shift, and go to state 13
    "new"         shift, and go to state 14
    "nil"         shift, and go to state 15
    "while"       shift, and go to state 19
    "_exp"        shift, and go to state 20
    "_lvalue"     shift, and go to state 21

    exp     go to state 203
    lvalue  go to state 25


State 184

   59 chunks: "_chunks" "(" "integer" ")" chunks •

    $default  reduce using rule 59 (chunks)


State 185

   42 exp: lvalue "." "identifier" "(" funcall • ")"

    ")"  shift, and go to state 204


State 186

   16 exp: "identifier" "[" exp "]" "of" exp •  ["end of file", "class", ",", "do", "else", "end", "function", "import", "in", "method", "primitive", "}", "]", ")", ";", "then", "to", "type", "var", "_chunks"]
   21    | exp • "=" exp
   22    | exp • "+" exp
   23    | exp • "-" exp
   24    | exp • "*" exp
   25    | exp • "/" exp
   26    | exp • ">=" exp
   27    | exp • "<=" exp
   28    | exp • "<>" exp
   29    | exp • ">" exp
   30    | exp • "<" exp
   31    | exp • "&" exp
   32    | exp • "|" exp

    "&"   shift, and go to state 59
    "/"   shift, and go to state 60
    "="   shift, and go to state 61
    ">="  shift, and go to state 62
    ">"   shift, and go to state 63
    "<="  shift, and go to state 64
    "<"   shift, and go to state 65
    "-"   shift, and go to state 66
    "<>"  shift, and go to state 67
    "|"   shift, and go to state 68
    "+"   shift, and go to state 69
    "*"   shift, and go to state 70

    $default  reduce using rule 16 (exp)

    Conflict between rule 16 and token "&" resolved as shift ("of" < "&").
    Conflict between rule 16 and token "/" resolved as shift ("of" < "/").
    Conflict between rule 16 and token "=" resolved as shift ("of" < "=").
    Conflict between rule 16 and token ">=" resolved as shift ("of" < ">=").
    Conflict between rule 16 and token ">" resolved as shift ("of" < ">").
    Conflict between rule 16 and token "<=" resolved as shift ("of" < "<=").
    Conflict between rule 16 and token "<" resolved as shift ("of" < "<").
    Conflict between rule 16 and token "-" resolved as shift ("of" < "-").
    Conflict between rule 16 and token "<>" resolved as shift ("of" < "<>").
    Conflict between rule 16 and token "|" resolved as shift ("of" < "|").
    Conflict between rule 16 and token "+" resolved as shift ("of" < "+").
    Conflict between rule 16 and token "*" resolved as shift ("of" < "*").


State 187

   43 exp: "_cast" "(" exp "," ty ")" •

    $default  reduce using rule 43 (exp)


State 188

   72 tydec: "class" "identifier" "extends" typeid "{" classfields • "}"

    "}"  shift, and go to state 205


State 189

   84 tyvarchunks: ε •  [")"]
   85            | • tyvarchunks.1
   86 tyvarchunks.1: • tyvarchunks.1 "," tyvardec
   87              | • tyvardec
   88 tyvardec: • "identifier" ":" typeid
   94 methdec: "method" "identifier" "(" • tyvarchunks ")" "=" exp
   95        | "method" "identifier" "(" • tyvarchunks ")" ":" typeid "=" exp

    "identifier"  shift, and go to state 135

    $default  reduce using rule 84 (tyvarchunks)

    tyvarchunks    go to state 206
    tyvarchunks.1  go to state 137
    tyvardec       go to state 138


State 190

   21 exp: exp • "=" exp
   22    | exp • "+" exp
   23    | exp • "-" exp
   24    | exp • "*" exp
   25    | exp • "/" exp
   26    | exp • ">=" exp
   27    | exp • "<=" exp
   28    | exp • "<>" exp
   29    | exp • ">" exp
   30    | exp • "<" exp
   31    | exp • "&" exp
   32    | exp • "|" exp
   38    | "for" "identifier" ":=" exp "to" exp • "do" exp

    "&"   shift, and go to state 59
    "/"   shift, and go to state 60
    "do"  shift, and go to state 207
    "="   shift, and go to state 61
    ">="  shift, and go to state 62
    ">"   shift, and go to state 63
    "<="  shift, and go to state 64
    "<"   shift, and go to state 65
    "-"   shift, and go to state 66
    "<>"  shift, and go to state 67
    "|"   shift, and go to state 68
    "+"   shift, and go to state 69
    "*"   shift, and go to state 70


State 191

   88 tyvardec: "identifier" ":" typeid •

    $default  reduce using rule 88 (tyvardec)


State 192

   63 fundec: "function" "identifier" "(" tyvarchunks ")" ":" • typeid "=" exp
   96 typeid: • "identifier"
   97       | • "_namety" "(" "integer" ")"

    "identifier"  shift, and go to state 48
    "_namety"     shift, and go to state 49

    typeid  go to state 208


State 193

   13 exp: • "integer"
   14    | • "nil"
   15    | • "string"
   16    | • "identifier" "[" exp "]" "of" exp
   17    | • "identifier" "{" rec "}"
   18    | • lvalue
   19    | • "identifier" "(" funcall ")"
   20    | • "-" exp
   21    | • exp "=" exp
   22    | • exp "+" exp
   23    | • exp "-" exp
   24    | • exp "*" exp
   25    | • exp "/" exp
   26    | • exp ">=" exp
   27    | • exp "<=" exp
   28    | • exp "<>" exp
   29    | • exp ">" exp
   30    | • exp "<" exp
   31    | • exp "&" exp
   32    | • exp "|" exp
   33    | • "(" exps ")"
   34    | • lvalue ":=" exp
   35    | • "if" exp "then" exp "else" exp
   36    | • "if" exp "then" exp
   37    | • "while" exp "do" exp
   38    | • "for" "identifier" ":=" exp "to" exp "do" exp
   39    | • "break"
   40    | • "let" chunks "in" exps "end"
   41    | • "new" typeid
   42    | • lvalue "." "identifier" "(" funcall ")"
   43    | • "_cast" "(" exp "," ty ")"
   44    | • "_exp" "(" "integer" ")"
   45 lvalue: • "identifier"
   46       | • lvalue "." "identifier"
   47       | • lvalue "[" exp "]"
   48       | • "_lvalue" "(" "integer" ")"
   62 fundec: "function" "identifier" "(" tyvarchunks ")" "=" • exp

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "_cast"       shift, and go to state 5
    "for"         shift, and go to state 7
    "if"          shift, and go to state 9
    "let"         shift, and go to state 11
    "("           shift, and go to state 12
    "-"           shift, and go to state 13
    "new"         shift, and go to state 14
    "nil"         shift, and go to state 15
    "while"       shift, and go to state 19
    "_exp"        shift, and go to state 20
    "_lvalue"     shift, and go to state 21

    exp     go to state 209
    lvalue  go to state 25


State 194

   86 tyvarchunks.1: tyvarchunks.1 "," tyvardec •

    $default  reduce using rule 86 (tyvarchunks.1)


State 195

   21 exp: exp • "=" exp
   22    | exp • "+" exp
   23    | exp • "-" exp
   24    | exp • "*" exp
   25    | exp • "/" exp
   26    | exp • ">=" exp
   27    | exp • "<=" exp
   28    | exp • "<>" exp
   29    | exp • ">" exp
   30    | exp • "<" exp
   31    | exp • "&" exp
   32    | exp • "|" exp
   35    | "if" exp "then" exp "else" exp •  ["end of file", "class", ",", "do", "else", "end", "function", "import", "in", "method", "primitive", "}", "]", ")", ";", "then", "to", "type", "var", "_chunks"]

    "&"   shift, and go to state 59
    "/"   shift, and go to state 60
    "="   shift, and go to state 61
    ">="  shift, and go to state 62
    ">"   shift, and go to state 63
    "<="  shift, and go to state 64
    "<"   shift, and go to state 65
    "-"   shift, and go to state 66
    "<>"  shift, and go to state 67
    "|"   shift, and go to state 68
    "+"   shift, and go to state 69
    "*"   shift, and go to state 70

    $default  reduce using rule 35 (exp)

    Conflict between rule 35 and token "&" resolved as shift ("else" < "&").
    Conflict between rule 35 and token "/" resolved as shift ("else" < "/").
    Conflict between rule 35 and token "=" resolved as shift ("else" < "=").
    Conflict between rule 35 and token ">=" resolved as shift ("else" < ">=").
    Conflict between rule 35 and token ">" resolved as shift ("else" < ">").
    Conflict between rule 35 and token "<=" resolved as shift ("else" < "<=").
    Conflict between rule 35 and token "<" resolved as shift ("else" < "<").
    Conflict between rule 35 and token "-" resolved as shift ("else" < "-").
    Conflict between rule 35 and token "<>" resolved as shift ("else" < "<>").
    Conflict between rule 35 and token "|" resolved as shift ("else" < "|").
    Conflict between rule 35 and token "+" resolved as shift ("else" < "+").
    Conflict between rule 35 and token "*" resolved as shift ("else" < "*").


State 196

   65 fundec: "primitive" "identifier" "(" tyvarchunks ")" ":" • typeid
   96 typeid: • "identifier"
   97       | • "_namety" "(" "integer" ")"

    "identifier"  shift, and go to state 48
    "_namety"     shift, and go to state 49

    typeid  go to state 210


State 197

   76 ty: "array" "of" typeid •

    $default  reduce using rule 76 (ty)


State 198

   77 ty: "class" "extends" typeid • "{" classfields "}"

    "{"  shift, and go to state 211


State 199

   78 ty: "class" "{" classfields • "}"

    "}"  shift, and go to state 212


State 200

   83 tyfield: "identifier" ":" • typeid
   96 typeid: • "identifier"
   97       | • "_namety" "(" "integer" ")"

    "identifier"  shift, and go to state 48
    "_namety"     shift, and go to state 49

    typeid  go to state 213


State 201

   75 ty: "{" tyfields "}" •

    $default  reduce using rule 75 (ty)


State 202

   81 tyfields.1: tyfields.1 "," • tyfield
   83 tyfield: • "identifier" ":" typeid

    "identifier"  shift, and go to state 179

    tyfield  go to state 214


State 203

   21 exp: exp • "=" exp
   22    | exp • "+" exp
   23    | exp • "-" exp
   24    | exp • "*" exp
   25    | exp • "/" exp
   26    | exp • ">=" exp
   27    | exp • "<=" exp
   28    | exp • "<>" exp
   29    | exp • ">" exp
   30    | exp • "<" exp
   31    | exp • "&" exp
   32    | exp • "|" exp
   68 vardec: "var" "identifier" ":" typeid ":=" exp •  ["end of file", "class", "function", "import", "in", "method", "primitive", "}", "type", "var", "_chunks"]

    "&"   shift, and go to state 59
    "/"   shift, and go to state 60
    "="   shift, and go to state 61
    ">="  shift, and go to state 62
    ">"   shift, and go to state 63
    "<="  shift, and go to state 64
    "<"   shift, and go to state 65
    "-"   shift, and go to state 66
    "<>"  shift, and go to state 67
    "|"   shift, and go to state 68
    "+"   shift, and go to state 69
    "*"   shift, and go to state 70

    $default  reduce using rule 68 (vardec)


State 204

   42 exp: lvalue "." "identifier" "(" funcall ")" •

    $default  reduce using rule 42 (exp)


State 205

   72 tydec: "class" "identifier" "extends" typeid "{" classfields "}" •

    $default  reduce using rule 72 (tydec)


State 206

   94 methdec: "method" "identifier" "(" tyvarchunks • ")" "=" exp
   95        | "method" "identifier" "(" tyvarchunks • ")" ":" typeid "=" exp

    ")"  shift, and go to state 215


State 207

   13 exp: • "integer"
   14    | • "nil"
   15    | • "string"
   16    | • "identifier" "[" exp "]" "of" exp
   17    | • "identifier" "{" rec "}"
   18    | • lvalue
   19    | • "identifier" "(" funcall ")"
   20    | • "-" exp
   21    | • exp "=" exp
   22    | • exp "+" exp
   23    | • exp "-" exp
   24    | • exp "*" exp
   25    | • exp "/" exp
   26    | • exp ">=" exp
   27    | • exp "<=" exp
   28    | • exp "<>" exp
   29    | • exp ">" exp
   30    | • exp "<" exp
   31    | • exp "&" exp
   32    | • exp "|" exp
   33    | • "(" exps ")"
   34    | • lvalue ":=" exp
   35    | • "if" exp "then" exp "else" exp
   36    | • "if" exp "then" exp
   37    | • "while" exp "do" exp
   38    | • "for" "identifier" ":=" exp "to" exp "do" exp
   38    | "for" "identifier" ":=" exp "to" exp "do" • exp
   39    | • "break"
   40    | • "let" chunks "in" exps "end"
   41    | • "new" typeid
   42    | • lvalue "." "identifier" "(" funcall ")"
   43    | • "_cast" "(" exp "," ty ")"
   44    | • "_exp" "(" "integer" ")"
   45 lvalue: • "identifier"
   46       | • lvalue "." "identifier"
   47       | • lvalue "[" exp "]"
   48       | • "_lvalue" "(" "integer" ")"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "_cast"       shift, and go to state 5
    "for"         shift, and go to state 7
    "if"          shift, and go to state 9
    "let"         shift, and go to state 11
    "("           shift, and go to state 12
    "-"           shift, and go to state 13
    "new"         shift, and go to state 14
    "nil"         shift, and go to state 15
    "while"       shift, and go to state 19
    "_exp"        shift, and go to state 20
    "_lvalue"     shift, and go to state 21

    exp     go to state 216
    lvalue  go to state 25


State 208

   63 fundec: "function" "identifier" "(" tyvarchunks ")" ":" typeid • "=" exp

    "="  shift, and go to state 217


State 209

   21 exp: exp • "=" exp
   22    | exp • "+" exp
   23    | exp • "-" exp
   24    | exp • "*" exp
   25    | exp • "/" exp
   26    | exp • ">=" exp
   27    | exp • "<=" exp
   28    | exp • "<>" exp
   29    | exp • ">" exp
   30    | exp • "<" exp
   31    | exp • "&" exp
   32    | exp • "|" exp
   62 fundec: "function" "identifier" "(" tyvarchunks ")" "=" exp •  ["end of file", "class", "function", "import", "in", "primitive", "type", "var", "_chunks"]

    "&"   shift, and go to state 59
    "/"   shift, and go to state 60
    "="   shift, and go to state 61
    ">="  shift, and go to state 62
    ">"   shift, and go to state 63
    "<="  shift, and go to state 64
    "<"   shift, and go to state 65
    "-"   shift, and go to state 66
    "<>"  shift, and go to state 67
    "|"   shift, and go to state 68
    "+"   shift, and go to state 69
    "*"   shift, and go to state 70

    $default  reduce using rule 62 (fundec)


State 210

   65 fundec: "primitive" "identifier" "(" tyvarchunks ")" ":" typeid •

    $default  reduce using rule 65 (fundec)


State 211

   66 varchunk: • vardec
   67 vardec: • "var" "identifier" ":=" exp
   68       | • "var" "identifier" ":" typeid ":=" exp
   77 ty: "class" "extends" typeid "{" • classfields "}"
   89 classfields: ε •  ["}"]
   90            | • varchunk classfields
   91            | • methchunk classfields
   92 methchunk: • methdec
   93          | • methdec methchunk
   94 methdec: • "method" "identifier" "(" tyvarchunks ")" "=" exp
   95        | • "method" "identifier" "(" tyvarchunks ")" ":" typeid "=" exp

    "method"  shift, and go to state 129
    "var"     shift, and go to state 18

    $default  reduce using rule 89 (classfields)

    varchunk     go to state 130
    vardec       go to state 30
    classfields  go to state 218
    methchunk    go to state 132
    methdec      go to state 133


State 212

   78 ty: "class" "{" classfields "}" •

    $default  reduce using rule 78 (ty)


State 213

   83 tyfield: "identifier" ":" typeid •

    $default  reduce using rule 83 (tyfield)


State 214

   81 tyfields.1: tyfields.1 "," tyfield •

    $default  reduce using rule 81 (tyfields.1)


State 215

   94 methdec: "method" "identifier" "(" tyvarchunks ")" • "=" exp
   95        | "method" "identifier" "(" tyvarchunks ")" • ":" typeid "=" exp

    ":"  shift, and go to state 219
    "="  shift, and go to state 220


State 216

   21 exp: exp • "=" exp
   22    | exp • "+" exp
   23    | exp • "-" exp
   24    | exp • "*" exp
   25    | exp • "/" exp
   26    | exp • ">=" exp
   27    | exp • "<=" exp
   28    | exp • "<>" exp
   29    | exp • ">" exp
   30    | exp • "<" exp
   31    | exp • "&" exp
   32    | exp • "|" exp
   38    | "for" "identifier" ":=" exp "to" exp "do" exp •  ["end of file", "class", ",", "do", "else", "end", "function", "import", "in", "method", "primitive", "}", "]", ")", ";", "then", "to", "type", "var", "_chunks"]

    "&"   shift, and go to state 59
    "/"   shift, and go to state 60
    "="   shift, and go to state 61
    ">="  shift, and go to state 62
    ">"   shift, and go to state 63
    "<="  shift, and go to state 64
    "<"   shift, and go to state 65
    "-"   shift, and go to state 66
    "<>"  shift, and go to state 67
    "|"   shift, and go to state 68
    "+"   shift, and go to state 69
    "*"   shift, and go to state 70

    $default  reduce using rule 38 (exp)

    Conflict between rule 38 and token "&" resolved as shift ("do" < "&").
    Conflict between rule 38 and token "/" resolved as shift ("do" < "/").
    Conflict between rule 38 and token "=" resolved as shift ("do" < "=").
    Conflict between rule 38 and token ">=" resolved as shift ("do" < ">=").
    Conflict between rule 38 and token ">" resolved as shift ("do" < ">").
    Conflict between rule 38 and token "<=" resolved as shift ("do" < "<=").
    Conflict between rule 38 and token "<" resolved as shift ("do" < "<").
    Conflict between rule 38 and token "-" resolved as shift ("do" < "-").
    Conflict between rule 38 and token "<>" resolved as shift ("do" < "<>").
    Conflict between rule 38 and token "|" resolved as shift ("do" < "|").
    Conflict between rule 38 and token "+" resolved as shift ("do" < "+").
    Conflict between rule 38 and token "*" resolved as shift ("do" < "*").


State 217

   13 exp: • "integer"
   14    | • "nil"
   15    | • "string"
   16    | • "identifier" "[" exp "]" "of" exp
   17    | • "identifier" "{" rec "}"
   18    | • lvalue
   19    | • "identifier" "(" funcall ")"
   20    | • "-" exp
   21    | • exp "=" exp
   22    | • exp "+" exp
   23    | • exp "-" exp
   24    | • exp "*" exp
   25    | • exp "/" exp
   26    | • exp ">=" exp
   27    | • exp "<=" exp
   28    | • exp "<>" exp
   29    | • exp ">" exp
   30    | • exp "<" exp
   31    | • exp "&" exp
   32    | • exp "|" exp
   33    | • "(" exps ")"
   34    | • lvalue ":=" exp
   35    | • "if" exp "then" exp "else" exp
   36    | • "if" exp "then" exp
   37    | • "while" exp "do" exp
   38    | • "for" "identifier" ":=" exp "to" exp "do" exp
   39    | • "break"
   40    | • "let" chunks "in" exps "end"
   41    | • "new" typeid
   42    | • lvalue "." "identifier" "(" funcall ")"
   43    | • "_cast" "(" exp "," ty ")"
   44    | • "_exp" "(" "integer" ")"
   45 lvalue: • "identifier"
   46       | • lvalue "." "identifier"
   47       | • lvalue "[" exp "]"
   48       | • "_lvalue" "(" "integer" ")"
   63 fundec: "function" "identifier" "(" tyvarchunks ")" ":" typeid "=" • exp

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "_cast"       shift, and go to state 5
    "for"         shift, and go to state 7
    "if"          shift, and go to state 9
    "let"         shift, and go to state 11
    "("           shift, and go to state 12
    "-"           shift, and go to state 13
    "new"         shift, and go to state 14
    "nil"         shift, and go to state 15
    "while"       shift, and go to state 19
    "_exp"        shift, and go to state 20
    "_lvalue"     shift, and go to state 21

    exp     go to state 221
    lvalue  go to state 25


State 218

   77 ty: "class" "extends" typeid "{" classfields • "}"

    "}"  shift, and go to state 222


State 219

   95 methdec: "method" "identifier" "(" tyvarchunks ")" ":" • typeid "=" exp
   96 typeid: • "identifier"
   97       | • "_namety" "(" "integer" ")"

    "identifier"  shift, and go to state 48
    "_namety"     shift, and go to state 49

    typeid  go to state 223


State 220

   13 exp: • "integer"
   14    | • "nil"
   15    | • "string"
   16    | • "identifier" "[" exp "]" "of" exp
   17    | • "identifier" "{" rec "}"
   18    | • lvalue
   19    | • "identifier" "(" funcall ")"
   20    | • "-" exp
   21    | • exp "=" exp
   22    | • exp "+" exp
   23    | • exp "-" exp
   24    | • exp "*" exp
   25    | • exp "/" exp
   26    | • exp ">=" exp
   27    | • exp "<=" exp
   28    | • exp "<>" exp
   29    | • exp ">" exp
   30    | • exp "<" exp
   31    | • exp "&" exp
   32    | • exp "|" exp
   33    | • "(" exps ")"
   34    | • lvalue ":=" exp
   35    | • "if" exp "then" exp "else" exp
   36    | • "if" exp "then" exp
   37    | • "while" exp "do" exp
   38    | • "for" "identifier" ":=" exp "to" exp "do" exp
   39    | • "break"
   40    | • "let" chunks "in" exps "end"
   41    | • "new" typeid
   42    | • lvalue "." "identifier" "(" funcall ")"
   43    | • "_cast" "(" exp "," ty ")"
   44    | • "_exp" "(" "integer" ")"
   45 lvalue: • "identifier"
   46       | • lvalue "." "identifier"
   47       | • lvalue "[" exp "]"
   48       | • "_lvalue" "(" "integer" ")"
   94 methdec: "method" "identifier" "(" tyvarchunks ")" "=" • exp

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "_cast"       shift, and go to state 5
    "for"         shift, and go to state 7
    "if"          shift, and go to state 9
    "let"         shift, and go to state 11
    "("           shift, and go to state 12
    "-"           shift, and go to state 13
    "new"         shift, and go to state 14
    "nil"         shift, and go to state 15
    "while"       shift, and go to state 19
    "_exp"        shift, and go to state 20
    "_lvalue"     shift, and go to state 21

    exp     go to state 224
    lvalue  go to state 25


State 221

   21 exp: exp • "=" exp
   22    | exp • "+" exp
   23    | exp • "-" exp
   24    | exp • "*" exp
   25    | exp • "/" exp
   26    | exp • ">=" exp
   27    | exp • "<=" exp
   28    | exp • "<>" exp
   29    | exp • ">" exp
   30    | exp • "<" exp
   31    | exp • "&" exp
   32    | exp • "|" exp
   63 fundec: "function" "identifier" "(" tyvarchunks ")" ":" typeid "=" exp •  ["end of file", "class", "function", "import", "in", "primitive", "type", "var", "_chunks"]

    "&"   shift, and go to state 59
    "/"   shift, and go to state 60
    "="   shift, and go to state 61
    ">="  shift, and go to state 62
    ">"   shift, and go to state 63
    "<="  shift, and go to state 64
    "<"   shift, and go to state 65
    "-"   shift, and go to state 66
    "<>"  shift, and go to state 67
    "|"   shift, and go to state 68
    "+"   shift, and go to state 69
    "*"   shift, and go to state 70

    $default  reduce using rule 63 (fundec)


State 222

   77 ty: "class" "extends" typeid "{" classfields "}" •

    $default  reduce using rule 77 (ty)


State 223

   95 methdec: "method" "identifier" "(" tyvarchunks ")" ":" typeid • "=" exp

    "="  shift, and go to state 225


State 224

   21 exp: exp • "=" exp
   22    | exp • "+" exp
   23    | exp • "-" exp
   24    | exp • "*" exp
   25    | exp • "/" exp
   26    | exp • ">=" exp
   27    | exp • "<=" exp
   28    | exp • "<>" exp
   29    | exp • ">" exp
   30    | exp • "<" exp
   31    | exp • "&" exp
   32    | exp • "|" exp
   94 methdec: "method" "identifier" "(" tyvarchunks ")" "=" exp •  ["method", "}", "var"]

    "&"   shift, and go to state 59
    "/"   shift, and go to state 60
    "="   shift, and go to state 61
    ">="  shift, and go to state 62
    ">"   shift, and go to state 63
    "<="  shift, and go to state 64
    "<"   shift, and go to state 65
    "-"   shift, and go to state 66
    "<>"  shift, and go to state 67
    "|"   shift, and go to state 68
    "+"   shift, and go to state 69
    "*"   shift, and go to state 70

    $default  reduce using rule 94 (methdec)


State 225

   13 exp: • "integer"
   14    | • "nil"
   15    | • "string"
   16    | • "identifier" "[" exp "]" "of" exp
   17    | • "identifier" "{" rec "}"
   18    | • lvalue
   19    | • "identifier" "(" funcall ")"
   20    | • "-" exp
   21    | • exp "=" exp
   22    | • exp "+" exp
   23    | • exp "-" exp
   24    | • exp "*" exp
   25    | • exp "/" exp
   26    | • exp ">=" exp
   27    | • exp "<=" exp
   28    | • exp "<>" exp
   29    | • exp ">" exp
   30    | • exp "<" exp
   31    | • exp "&" exp
   32    | • exp "|" exp
   33    | • "(" exps ")"
   34    | • lvalue ":=" exp
   35    | • "if" exp "then" exp "else" exp
   36    | • "if" exp "then" exp
   37    | • "while" exp "do" exp
   38    | • "for" "identifier" ":=" exp "to" exp "do" exp
   39    | • "break"
   40    | • "let" chunks "in" exps "end"
   41    | • "new" typeid
   42    | • lvalue "." "identifier" "(" funcall ")"
   43    | • "_cast" "(" exp "," ty ")"
   44    | • "_exp" "(" "integer" ")"
   45 lvalue: • "identifier"
   46       | • lvalue "." "identifier"
   47       | • lvalue "[" exp "]"
   48       | • "_lvalue" "(" "integer" ")"
   95 methdec: "method" "identifier" "(" tyvarchunks ")" ":" typeid "=" • exp

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "_cast"       shift, and go to state 5
    "for"         shift, and go to state 7
    "if"          shift, and go to state 9
    "let"         shift, and go to state 11
    "("           shift, and go to state 12
    "-"           shift, and go to state 13
    "new"         shift, and go to state 14
    "nil"         shift, and go to state 15
    "while"       shift, and go to state 19
    "_exp"        shift, and go to state 20
    "_lvalue"     shift, and go to state 21

    exp     go to state 226
    lvalue  go to state 25


State 226

   21 exp: exp • "=" exp
   22    | exp • "+" exp
   23    | exp • "-" exp
   24    | exp • "*" exp
   25    | exp • "/" exp
   26    | exp • ">=" exp
   27    | exp • "<=" exp
   28    | exp • "<>" exp
   29    | exp • ">" exp
   30    | exp • "<" exp
   31    | exp • "&" exp
   32    | exp • "|" exp
   95 methdec: "method" "identifier" "(" tyvarchunks ")" ":" typeid "=" exp •  ["method", "}", "var"]

    "&"   shift, and go to state 59
    "/"   shift, and go to state 60
    "="   shift, and go to state 61
    ">="  shift, and go to state 62
    ">"   shift, and go to state 63
    "<="  shift, and go to state 64
    "<"   shift, and go to state 65
    "-"   shift, and go to state 66
    "<>"  shift, and go to state 67
    "|"   shift, and go to state 68
    "+"   shift, and go to state 69
    "*"   shift, and go to state 70

    $default  reduce using rule 95 (methdec)
